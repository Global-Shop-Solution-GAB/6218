Program.Sub.ScreenSU.Start
Gui.F_Grid..Create(BaseForm)
Gui.F_Grid..Caption("Form")
Gui.F_Grid..Size(1021,709)
Gui.F_Grid..MinX(0)
Gui.F_Grid..MinY(0)
Gui.F_Grid..Position(0,0)
Gui.F_Grid..AlwaysOnTop(False)
Gui.F_Grid..FontName("Tahoma")
Gui.F_Grid..FontSize(8.25)
Gui.F_Grid..ControlBox(True)
Gui.F_Grid..MaxButton(True)
Gui.F_Grid..MinButton(True)
Gui.F_Grid..MousePointer(0)
Gui.F_Grid..Moveable(True)
Gui.F_Grid..Sizeable(True)
Gui.F_Grid..ShowInTaskBar(True)
Gui.F_Grid..TitleBar(True)
Gui.F_Grid..Event(UnLoad,Form_UnLoad)
Gui.F_Grid.SplitContainer1.Create(SplitContainer)
Gui.F_Grid.SplitContainer1.Enabled(True)
Gui.F_Grid.SplitContainer1.Visible(True)
Gui.F_Grid.SplitContainer1.Zorder(0)
Gui.F_Grid.SplitContainer1.Size(1008,668)
Gui.F_Grid.SplitContainer1.Position(8,5)
Gui.F_Grid.SplitContainer1.Orientation(0)
Gui.F_Grid.SplitContainer1.SplitterPosition(493)
Gui.F_Grid.SplitContainer1.Collapsed(False)
Gui.F_Grid.SplitContainer1.Anchor(15)
Gui.F_Grid.gsForecast.Create(GsGridControl)
Gui.F_Grid.gsForecast.Enabled(True)
Gui.F_Grid.gsForecast.Visible(True)
Gui.F_Grid.gsForecast.Zorder(0)
Gui.F_Grid.gsForecast.Size(483,350)
Gui.F_Grid.gsForecast.Position(7,6)
Gui.F_Grid.gsForecast.Parent("SplitContainer1",1)
Gui.F_Grid.gsForecast.Anchor(13)
Gui.F_Grid.gsUpload.Create(GsGridControl)
Gui.F_Grid.gsUpload.Enabled(True)
Gui.F_Grid.gsUpload.Visible(True)
Gui.F_Grid.gsUpload.Zorder(0)
Gui.F_Grid.gsUpload.Size(483,296)
Gui.F_Grid.gsUpload.Position(7,363)
Gui.F_Grid.gsUpload.Parent("SplitContainer1",1)
Gui.F_Grid.gsUpload.Anchor(15)
Gui.F_Grid.gsCommit.Create(GsGridControl)
Gui.F_Grid.gsCommit.Enabled(True)
Gui.F_Grid.gsCommit.Visible(True)
Gui.F_Grid.gsCommit.Zorder(0)
Gui.F_Grid.gsCommit.Size(483,350)
Gui.F_Grid.gsCommit.Position(6,5)
Gui.F_Grid.gsCommit.Parent("SplitContainer1",0)
Gui.F_Grid.gsCommit.Anchor(13)
Gui.F_Grid.gsMerged.Create(GsGridControl)
Gui.F_Grid.gsMerged.Enabled(True)
Gui.F_Grid.gsMerged.Visible(True)
Gui.F_Grid.gsMerged.Zorder(0)
Gui.F_Grid.gsMerged.Size(483,296)
Gui.F_Grid.gsMerged.Position(6,363)
Gui.F_Grid.gsMerged.Parent("SplitContainer1",0)
Gui.F_Grid.gsMerged.Anchor(15)
Gui.Form..Create(BaseForm)
Gui.Form..Caption("6218 EDI Inbound Upload and Compare")
Gui.Form..Size(1278,595)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.lbl1.Create(Label,"Commit File",True,54,13,0,8,9,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl1.BorderStyle(0)
Gui.Form.txtCommitFilePath.Create(TextBox,"C:\Users\bnguyen\Desktop\Archieve\6218 Triple EDI Conversion\CALL TRI140-21120191553-1\Custom Change Report Specs.updated020419\20181214_1400EST_commits_TRIPLEINC_export.csv",True,889,20,0,72,4,True,0,"Tahoma",8.25,,1)
Gui.Form.txtCommitFilePath.Anchor(13)
Gui.Form.cmdBrowseCommitFile.Create(Button)
Gui.Form.cmdBrowseCommitFile.Enabled(True)
Gui.Form.cmdBrowseCommitFile.Visible(True)
Gui.Form.cmdBrowseCommitFile.Zorder(0)
Gui.Form.cmdBrowseCommitFile.Size(32,23)
Gui.Form.cmdBrowseCommitFile.Position(968,2)
Gui.Form.cmdBrowseCommitFile.Caption("^")
Gui.Form.cmdBrowseCommitFile.FontName("Tahoma")
Gui.Form.cmdBrowseCommitFile.FontSize(8.25)
Gui.Form.cmdBrowseCommitFile.Event(Click,cmdBrowseCommitFile_Click)
Gui.Form.cmdBrowseCommitFile.Anchor(9)
Gui.Form.cmdColumns4CommitFile.Create(Button)
Gui.Form.cmdColumns4CommitFile.Enabled(True)
Gui.Form.cmdColumns4CommitFile.Visible(True)
Gui.Form.cmdColumns4CommitFile.Zorder(0)
Gui.Form.cmdColumns4CommitFile.Size(64,23)
Gui.Form.cmdColumns4CommitFile.Position(1006,2)
Gui.Form.cmdColumns4CommitFile.Caption("Columns")
Gui.Form.cmdColumns4CommitFile.FontName("Tahoma")
Gui.Form.cmdColumns4CommitFile.FontSize(8.25)
Gui.Form.cmdColumns4CommitFile.Event(Click,cmdColumns4CommitFile_Click)
Gui.Form.cmdColumns4CommitFile.Anchor(9)
Gui.Form.lbl2.Create(Label,"Forecast File",True,61,13,0,8,36,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl2.BorderStyle(0)
Gui.Form.txtForecastFilePath.Create(TextBox,"C:\Users\bnguyen\Desktop\Archieve\6218 Triple EDI Conversion\CALL TRI140-21120191553-1\Custom Change Report Specs.updated020419\UTASGLOBAL_ZORDFCST_20181214140704.csv",True,889,20,0,72,33,True,0,"Tahoma",8.25,,1)
Gui.Form.txtForecastFilePath.Anchor(13)
Gui.Form.cmdBrowseForecastFile.Create(Button)
Gui.Form.cmdBrowseForecastFile.Enabled(True)
Gui.Form.cmdBrowseForecastFile.Visible(True)
Gui.Form.cmdBrowseForecastFile.Zorder(0)
Gui.Form.cmdBrowseForecastFile.Size(32,23)
Gui.Form.cmdBrowseForecastFile.Position(968,31)
Gui.Form.cmdBrowseForecastFile.Caption("^")
Gui.Form.cmdBrowseForecastFile.FontName("Tahoma")
Gui.Form.cmdBrowseForecastFile.FontSize(8.25)
Gui.Form.cmdBrowseForecastFile.Event(Click,cmdBrowseForecastFile_Click)
Gui.Form.cmdBrowseForecastFile.Anchor(9)
Gui.Form.cmdColumns4ForecastFile.Create(Button)
Gui.Form.cmdColumns4ForecastFile.Enabled(True)
Gui.Form.cmdColumns4ForecastFile.Visible(True)
Gui.Form.cmdColumns4ForecastFile.Zorder(0)
Gui.Form.cmdColumns4ForecastFile.Size(64,23)
Gui.Form.cmdColumns4ForecastFile.Position(1006,31)
Gui.Form.cmdColumns4ForecastFile.Caption("Columns")
Gui.Form.cmdColumns4ForecastFile.FontName("Tahoma")
Gui.Form.cmdColumns4ForecastFile.FontSize(8.25)
Gui.Form.cmdColumns4ForecastFile.Event(Click,cmdColumns4ForecastFile_Click)
Gui.Form.cmdColumns4ForecastFile.Anchor(9)
Gui.Form.lbl3.Create(Label,"Rev File",True,38,13,0,8,61,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl3.BorderStyle(0)
Gui.Form.txtRevSource.Create(TextBox,"C:\Users\bnguyen\Desktop\Archieve\6218 Triple EDI Conversion\CALL TRI140-21120191553-1\Custom Change Report Specs.updated020419\20181214_1400EST_commits_TRIPLEINC_export.csv",True,889,20,0,72,61,True,0,"Tahoma",8.25,,1)
Gui.Form.txtRevSource.Anchor(13)
Gui.Form.cmdBrowseRevSource.Create(Button)
Gui.Form.cmdBrowseRevSource.Enabled(True)
Gui.Form.cmdBrowseRevSource.Visible(True)
Gui.Form.cmdBrowseRevSource.Zorder(0)
Gui.Form.cmdBrowseRevSource.Size(32,23)
Gui.Form.cmdBrowseRevSource.Position(968,59)
Gui.Form.cmdBrowseRevSource.Caption("^")
Gui.Form.cmdBrowseRevSource.FontName("Tahoma")
Gui.Form.cmdBrowseRevSource.FontSize(8.25)
Gui.Form.cmdBrowseRevSource.Event(Click,cmdBrowseRevSource_Click)
Gui.Form.cmdBrowseRevSource.Anchor(9)
Gui.Form.cmdLoadRevSource.Create(Button)
Gui.Form.cmdLoadRevSource.Enabled(True)
Gui.Form.cmdLoadRevSource.Visible(True)
Gui.Form.cmdLoadRevSource.Zorder(0)
Gui.Form.cmdLoadRevSource.Size(64,23)
Gui.Form.cmdLoadRevSource.Position(1006,59)
Gui.Form.cmdLoadRevSource.Caption("Load Rev")
Gui.Form.cmdLoadRevSource.FontName("Tahoma")
Gui.Form.cmdLoadRevSource.FontSize(8.25)
Gui.Form.cmdLoadRevSource.Event(Click,cmdLoadRevSource_Click)
Gui.Form.cmdLoadRevSource.Anchor(9)
Gui.Form.cmdSaveDefault.Create(Button)
Gui.Form.cmdSaveDefault.Enabled(True)
Gui.Form.cmdSaveDefault.Visible(True)
Gui.Form.cmdSaveDefault.Zorder(0)
Gui.Form.cmdSaveDefault.Size(113,23)
Gui.Form.cmdSaveDefault.Position(1075,2)
Gui.Form.cmdSaveDefault.Caption("Save File Paths")
Gui.Form.cmdSaveDefault.FontName("Tahoma")
Gui.Form.cmdSaveDefault.FontSize(8.25)
Gui.Form.cmdSaveDefault.Event(Click,cmdSaveDefault_Click)
Gui.Form.cmdSaveDefault.Anchor(9)
Gui.Form.cmdProcessFromCache.Create(Button)
Gui.Form.cmdProcessFromCache.Enabled(True)
Gui.Form.cmdProcessFromCache.Visible(True)
Gui.Form.cmdProcessFromCache.Zorder(0)
Gui.Form.cmdProcessFromCache.Size(113,23)
Gui.Form.cmdProcessFromCache.Position(1075,31)
Gui.Form.cmdProcessFromCache.Caption("Process from Cache")
Gui.Form.cmdProcessFromCache.FontName("Tahoma")
Gui.Form.cmdProcessFromCache.FontSize(8.25)
Gui.Form.cmdProcessFromCache.Event(Click,cmdProcessFromCache_Click)
Gui.Form.cmdProcessFromCache.Anchor(9)
Gui.Form.cmdProcess.Create(Button)
Gui.Form.cmdProcess.Enabled(True)
Gui.Form.cmdProcess.Visible(True)
Gui.Form.cmdProcess.Zorder(0)
Gui.Form.cmdProcess.Size(113,23)
Gui.Form.cmdProcess.Position(1075,59)
Gui.Form.cmdProcess.Caption("Process")
Gui.Form.cmdProcess.FontName("Tahoma")
Gui.Form.cmdProcess.FontSize(8.25)
Gui.Form.cmdProcess.Event(Click,cmdProcess_Click)
Gui.Form.cmdProcess.Anchor(9)
Gui.Form.lblProcess.Create(Label,"Please wait...",False,66,13,0,1194,86,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblProcess.BorderStyle(0)
Gui.Form.lblProcess.ForeColor(8036607)
Gui.Form.lblProcess.Anchor(9)
Gui.Form.cmdCreateEA850.Create(Button)
Gui.Form.cmdCreateEA850.Enabled(False)
Gui.Form.cmdCreateEA850.Visible(True)
Gui.Form.cmdCreateEA850.Zorder(0)
Gui.Form.cmdCreateEA850.Size(83,23)
Gui.Form.cmdCreateEA850.Position(1192,2)
Gui.Form.cmdCreateEA850.Caption("Create EA850")
Gui.Form.cmdCreateEA850.FontName("Tahoma")
Gui.Form.cmdCreateEA850.FontSize(8.25)
Gui.Form.cmdCreateEA850.Event(Click,cmdCreateEA850_Click)
Gui.Form.cmdCreateEA850.Anchor(9)
Gui.Form.cmdExport.Create(Button)
Gui.Form.cmdExport.Enabled(False)
Gui.Form.cmdExport.Visible(True)
Gui.Form.cmdExport.Zorder(0)
Gui.Form.cmdExport.Size(83,23)
Gui.Form.cmdExport.Position(1192,31)
Gui.Form.cmdExport.Caption("Export")
Gui.Form.cmdExport.FontName("Tahoma")
Gui.Form.cmdExport.FontSize(8.25)
Gui.Form.cmdExport.Event(Click,cmdExport_Click)
Gui.Form.cmdExport.Anchor(9)
Gui.Form.cmdOpenCompareForm.Create(Button)
Gui.Form.cmdOpenCompareForm.Enabled(False)
Gui.Form.cmdOpenCompareForm.Visible(True)
Gui.Form.cmdOpenCompareForm.Zorder(0)
Gui.Form.cmdOpenCompareForm.Size(83,23)
Gui.Form.cmdOpenCompareForm.Position(1192,59)
Gui.Form.cmdOpenCompareForm.Caption("Compare")
Gui.Form.cmdOpenCompareForm.FontName("Tahoma")
Gui.Form.cmdOpenCompareForm.FontSize(8.25)
Gui.Form.cmdOpenCompareForm.Event(Click,cmdOpenCompareForm_Click)
Gui.Form.cmdOpenCompareForm.Anchor(9)
Gui.Form.proBar1.Create(ProgressBar)
Gui.Form.proBar1.Visible(False)
Gui.Form.proBar1.Size(1179,8)
Gui.Form.proBar1.Position(6,91)
Gui.Form.proBar1.Anchor(13)
Gui.Form.proBar2.Create(ProgressBar)
Gui.Form.proBar2.Visible(False)
Gui.Form.proBar2.Size(1179,8)
Gui.Form.proBar2.Position(6,91)
Gui.Form.proBar2.Anchor(13)
Gui.Form.proBar6.Create(ProgressBar)
Gui.Form.proBar6.Visible(False)
Gui.Form.proBar6.Size(1179,8)
Gui.Form.proBar6.Position(6,91)
Gui.Form.proBar6.Anchor(13)
Gui.Form.proBar4.Create(ProgressBar)
Gui.Form.proBar4.Visible(False)
Gui.Form.proBar4.Size(1179,8)
Gui.Form.proBar4.Position(6,91)
Gui.Form.proBar4.Anchor(13)
Gui.Form.proBar3.Create(ProgressBar)
Gui.Form.proBar3.Visible(False)
Gui.Form.proBar3.Size(1179,8)
Gui.Form.proBar3.Position(6,91)
Gui.Form.proBar3.Anchor(13)
Gui.Form.Ctn1.Create(SplitContainer)
Gui.Form.Ctn1.Enabled(True)
Gui.Form.Ctn1.Visible(True)
Gui.Form.Ctn1.Zorder(0)
Gui.Form.Ctn1.Size(1266,458)
Gui.Form.Ctn1.Position(8,103)
Gui.Form.Ctn1.Orientation(0)
Gui.Form.Ctn1.SplitterPosition(626)
Gui.Form.Ctn1.Collapsed(False)
Gui.Form.Ctn1.Anchor(15)
Gui.Form.CntRight.Create(SplitContainer)
Gui.Form.CntRight.Enabled(True)
Gui.Form.CntRight.Visible(True)
Gui.Form.CntRight.Zorder(0)
Gui.Form.CntRight.Size(625,455)
Gui.Form.CntRight.Position(0,0)
Gui.Form.CntRight.Orientation(1)
Gui.Form.CntRight.SplitterPosition(223)
Gui.Form.CntRight.Collapsed(False)
Gui.Form.CntRight.Parent("Ctn1",1)
Gui.Form.CntRight.Anchor(15)
Gui.Form.gsUpload.Create(GsGridControl)
Gui.Form.gsUpload.Enabled(True)
Gui.Form.gsUpload.Visible(True)
Gui.Form.gsUpload.Zorder(0)
Gui.Form.gsUpload.Size(621,220)
Gui.Form.gsUpload.Position(0,0)
Gui.Form.gsUpload.Parent("CntRight",1)
Gui.Form.gsUpload.Anchor(15)
Gui.Form.gsForecast.Create(GsGridControl)
Gui.Form.gsForecast.Enabled(True)
Gui.Form.gsForecast.Visible(True)
Gui.Form.gsForecast.Zorder(0)
Gui.Form.gsForecast.Size(621,223)
Gui.Form.gsForecast.Position(0,0)
Gui.Form.gsForecast.Parent("CntRight",0)
Gui.Form.gsForecast.Anchor(15)
Gui.Form.CtnLeft.Create(SplitContainer)
Gui.Form.CtnLeft.Enabled(True)
Gui.Form.CtnLeft.Visible(True)
Gui.Form.CtnLeft.Zorder(0)
Gui.Form.CtnLeft.Size(625,455)
Gui.Form.CtnLeft.Position(0,0)
Gui.Form.CtnLeft.Orientation(1)
Gui.Form.CtnLeft.SplitterPosition(223)
Gui.Form.CtnLeft.Collapsed(False)
Gui.Form.CtnLeft.Parent("Ctn1",0)
Gui.Form.CtnLeft.Anchor(15)
Gui.Form.gsMerged.Create(GsGridControl)
Gui.Form.gsMerged.Enabled(True)
Gui.Form.gsMerged.Visible(True)
Gui.Form.gsMerged.Zorder(0)
Gui.Form.gsMerged.Size(621,220)
Gui.Form.gsMerged.Position(0,-3)
Gui.Form.gsMerged.Parent("CtnLeft",1)
Gui.Form.gsMerged.Anchor(15)
Gui.Form.gsCommit.Create(GsGridControl)
Gui.Form.gsCommit.Enabled(True)
Gui.Form.gsCommit.Visible(True)
Gui.Form.gsCommit.Zorder(0)
Gui.Form.gsCommit.Size(621,223)
Gui.Form.gsCommit.Position(0,0)
Gui.Form.gsCommit.Parent("CtnLeft",0)
Gui.Form.gsCommit.Anchor(15)
Gui.CommitColumns..Create(BaseForm)
Gui.CommitColumns..Caption("Columns for Commit File")
Gui.CommitColumns..Size(1023,216)
Gui.CommitColumns..MinX(0)
Gui.CommitColumns..MinY(0)
Gui.CommitColumns..Position(0,0)
Gui.CommitColumns..AlwaysOnTop(False)
Gui.CommitColumns..FontName("Tahoma")
Gui.CommitColumns..FontSize(8.25)
Gui.CommitColumns..ControlBox(True)
Gui.CommitColumns..MaxButton(True)
Gui.CommitColumns..MinButton(True)
Gui.CommitColumns..MousePointer(0)
Gui.CommitColumns..Moveable(True)
Gui.CommitColumns..Sizeable(True)
Gui.CommitColumns..ShowInTaskBar(True)
Gui.CommitColumns..TitleBar(True)
Gui.CommitColumns..Event(UnLoad,CommitColumns_UnLoad)
Gui.CommitColumns.lbl1.Create(Label,"Enter the column number. (Starting column A for 0, B for 1, etc.)",True,310,13,0,14,7,True,0,"Tahoma",8.25,,0,0)
Gui.CommitColumns.lbl1.BorderStyle(0)
Gui.CommitColumns.gsCommitColumns.Create(GsGridControl)
Gui.CommitColumns.gsCommitColumns.Enabled(True)
Gui.CommitColumns.gsCommitColumns.Visible(True)
Gui.CommitColumns.gsCommitColumns.Zorder(0)
Gui.CommitColumns.gsCommitColumns.Size(1000,145)
Gui.CommitColumns.gsCommitColumns.Position(11,28)
Gui.CommitColumns.gsCommitColumns.Event(CellValueChanged,gsCommitColumns_CellValueChanged)
Gui.ForecastColumns..Create(BaseForm)
Gui.ForecastColumns..Caption("Columns for Forecast File")
Gui.ForecastColumns..Size(1024,211)
Gui.ForecastColumns..MinX(0)
Gui.ForecastColumns..MinY(0)
Gui.ForecastColumns..Position(0,0)
Gui.ForecastColumns..AlwaysOnTop(False)
Gui.ForecastColumns..FontName("Tahoma")
Gui.ForecastColumns..FontSize(8.25)
Gui.ForecastColumns..ControlBox(True)
Gui.ForecastColumns..MaxButton(True)
Gui.ForecastColumns..MinButton(True)
Gui.ForecastColumns..MousePointer(0)
Gui.ForecastColumns..Moveable(True)
Gui.ForecastColumns..Sizeable(True)
Gui.ForecastColumns..ShowInTaskBar(True)
Gui.ForecastColumns..TitleBar(True)
Gui.ForecastColumns..Event(UnLoad,ForecastColumns_UnLoad)
Gui.ForecastColumns.lbl1.Create(Label,"Enter the column number. (Starting column A for 0, B for 1, etc.)",True,310,13,0,12,11,True,0,"Tahoma",8.25,,0,0)
Gui.ForecastColumns.lbl1.BorderStyle(0)
Gui.ForecastColumns.gsForecastColumns.Create(GsGridControl)
Gui.ForecastColumns.gsForecastColumns.Enabled(True)
Gui.ForecastColumns.gsForecastColumns.Visible(True)
Gui.ForecastColumns.gsForecastColumns.Zorder(0)
Gui.ForecastColumns.gsForecastColumns.Size(1005,140)
Gui.ForecastColumns.gsForecastColumns.Position(11,31)
Gui.ForecastColumns.gsForecastColumns.Event(CellValueChanged,gsForecastColumns_CellValueChanged)
Gui.Compare..Create(BaseForm)
Gui.Compare..Caption("Compare Report")
Gui.Compare..Size(1153,720)
Gui.Compare..MinX(0)
Gui.Compare..MinY(0)
Gui.Compare..Position(0,0)
Gui.Compare..AlwaysOnTop(False)
Gui.Compare..FontName("Tahoma")
Gui.Compare..FontSize(8.25)
Gui.Compare..ControlBox(True)
Gui.Compare..MaxButton(True)
Gui.Compare..MinButton(True)
Gui.Compare..MousePointer(0)
Gui.Compare..Moveable(True)
Gui.Compare..Sizeable(True)
Gui.Compare..ShowInTaskBar(True)
Gui.Compare..TitleBar(True)
Gui.Compare..Event(UnLoad,Compare_UnLoad)
Gui.Compare.cmdCompareFiles.Create(Button)
Gui.Compare.cmdCompareFiles.Enabled(True)
Gui.Compare.cmdCompareFiles.Visible(True)
Gui.Compare.cmdCompareFiles.Zorder(0)
Gui.Compare.cmdCompareFiles.Size(75,23)
Gui.Compare.cmdCompareFiles.Position(6,8)
Gui.Compare.cmdCompareFiles.Caption("Compare")
Gui.Compare.cmdCompareFiles.FontName("Tahoma")
Gui.Compare.cmdCompareFiles.FontSize(8.25)
Gui.Compare.cmdCompareFiles.Event(Click,cmdCompareFiles_Click)
Gui.Compare.cmdLoadCompareFromCache.Create(Button)
Gui.Compare.cmdLoadCompareFromCache.Enabled(True)
Gui.Compare.cmdLoadCompareFromCache.Visible(True)
Gui.Compare.cmdLoadCompareFromCache.Zorder(0)
Gui.Compare.cmdLoadCompareFromCache.Size(115,23)
Gui.Compare.cmdLoadCompareFromCache.Position(88,8)
Gui.Compare.cmdLoadCompareFromCache.Caption("Load From Cache")
Gui.Compare.cmdLoadCompareFromCache.FontName("Tahoma")
Gui.Compare.cmdLoadCompareFromCache.FontSize(8.25)
Gui.Compare.cmdLoadCompareFromCache.Event(Click,cmdLoadCompareFromCache_Click)
Gui.Compare.txtCust.Create(TextBox,"",True,53,20,0,267,10,True,0,"Tahoma",8.25,,1)
Gui.Compare.lbl1.Create(Label,"Customer",True,46,13,0,216,14,True,0,"Tahoma",8.25,,0,0)
Gui.Compare.lbl1.BorderStyle(0)
Gui.Compare.lbl2.Create(Label,"Reference",True,50,13,0,357,13,True,0,"Tahoma",8.25,,0,0)
Gui.Compare.lbl2.BorderStyle(0)
Gui.Compare.cmdBrowseCustomer.Create(Button)
Gui.Compare.cmdBrowseCustomer.Enabled(True)
Gui.Compare.cmdBrowseCustomer.Visible(True)
Gui.Compare.cmdBrowseCustomer.Zorder(0)
Gui.Compare.cmdBrowseCustomer.Size(29,21)
Gui.Compare.cmdBrowseCustomer.Position(323,9)
Gui.Compare.cmdBrowseCustomer.Caption("^")
Gui.Compare.cmdBrowseCustomer.FontName("Tahoma")
Gui.Compare.cmdBrowseCustomer.FontSize(8.25)
Gui.Compare.cmdBrowseCustomer.Event(Click,cmdBrowseCustomer_Click)
Gui.Compare.txtCustRef.Create(TextBox,"",True,53,20,0,414,10,True,0,"Tahoma",8.25,,1)
Gui.Compare.txtSelectedCustomers.Create(TextBox,"",True,209,20,0,616,10,True,0,"Tahoma",8.25,,1)
Gui.Compare.lbl3.Create(Label,"Selected Customers",True,95,13,0,514,13,True,0,"Tahoma",8.25,,0,0)
Gui.Compare.lbl3.BorderStyle(0)
Gui.Compare.cmdAddCustomer.Create(Button)
Gui.Compare.cmdAddCustomer.Enabled(True)
Gui.Compare.cmdAddCustomer.Visible(True)
Gui.Compare.cmdAddCustomer.Zorder(0)
Gui.Compare.cmdAddCustomer.Size(29,21)
Gui.Compare.cmdAddCustomer.Position(474,9)
Gui.Compare.cmdAddCustomer.Caption("Add")
Gui.Compare.cmdAddCustomer.FontName("Tahoma")
Gui.Compare.cmdAddCustomer.FontSize(8.25)
Gui.Compare.cmdAddCustomer.Event(Click,cmdAddCustomer_Click)
Gui.Compare.tab1.Create(Tab)
Gui.Compare.tab1.Enabled(True)
Gui.Compare.tab1.Visible(True)
Gui.Compare.tab1.Zorder(0)
Gui.Compare.tab1.Size(1139,649)
Gui.Compare.tab1.Position(8,38)
Gui.Compare.tab1.FontName("Tahoma")
Gui.Compare.tab1.FontSize(8.25)
Gui.Compare.tab1.Anchor(15)
Gui.Compare.tab1.Tabs(4)
Gui.Compare.tab1.SetTab(0)
Gui.Compare.tab1.Caption("All")
Gui.Compare.tab1.SetTab(1)
Gui.Compare.tab1.Caption("LTA")
Gui.Compare.tab1.SetTab(2)
Gui.Compare.tab1.Caption("NON-LTA")
Gui.Compare.tab1.SetTab(3)
Gui.Compare.tab1.Caption("Part Summary")
Gui.Compare.gsPart.Create(GsGridControl)
Gui.Compare.gsPart.Enabled(True)
Gui.Compare.gsPart.Visible(True)
Gui.Compare.gsPart.Zorder(0)
Gui.Compare.gsPart.Size(1129,611)
Gui.Compare.gsPart.Position(4,4)
Gui.Compare.gsPart.Parent("tab1",3)
Gui.Compare.gsPart.Anchor(15)
Gui.Compare.gsPart.Event(RowCellClick,gsPart_RowCellClick)
Gui.Compare.gsNONLTA.Create(GsGridControl)
Gui.Compare.gsNONLTA.Enabled(True)
Gui.Compare.gsNONLTA.Visible(True)
Gui.Compare.gsNONLTA.Zorder(0)
Gui.Compare.gsNONLTA.Size(1128,614)
Gui.Compare.gsNONLTA.Position(5,3)
Gui.Compare.gsNONLTA.Anchor(15)
Gui.Compare.gsNONLTA.Parent("tab1",2)
Gui.Compare.gsNONLTA.Event(RowCellClick,gsNONLTA_RowCellClick)
Gui.Compare.gsLTA.Create(GsGridControl)
Gui.Compare.gsLTA.Enabled(True)
Gui.Compare.gsLTA.Visible(True)
Gui.Compare.gsLTA.Zorder(0)
Gui.Compare.gsLTA.Size(1128,614)
Gui.Compare.gsLTA.Position(5,3)
Gui.Compare.gsLTA.Parent("tab1",1)
Gui.Compare.gsLTA.Anchor(15)
Gui.Compare.gsLTA.Event(RowCellClick,gsLTA_RowCellClick)
Gui.Compare.gsBoth.Create(GsGridControl)
Gui.Compare.gsBoth.Enabled(True)
Gui.Compare.gsBoth.Visible(True)
Gui.Compare.gsBoth.Zorder(0)
Gui.Compare.gsBoth.Size(1128,614)
Gui.Compare.gsBoth.Position(5,3)
Gui.Compare.gsBoth.Anchor(15)
Gui.Compare.gsBoth.Parent("tab1",0)
Gui.Compare.gsBoth.Event(RowCellClick,gsBoth_RowCellClick)
Gui.Compare.cmdExportCompare.Create(Button)
Gui.Compare.cmdExportCompare.Enabled(True)
Gui.Compare.cmdExportCompare.Visible(True)
Gui.Compare.cmdExportCompare.Zorder(0)
Gui.Compare.cmdExportCompare.Size(75,23)
Gui.Compare.cmdExportCompare.Position(834,8)
Gui.Compare.cmdExportCompare.Caption("Export")
Gui.Compare.cmdExportCompare.FontName("Tahoma")
Gui.Compare.cmdExportCompare.FontSize(8.25)
Gui.Compare.cmdExportCompare.Event(Click,cmdExportCompare_Click)
Gui.Progress..Create(BaseForm)
Gui.Progress..Caption("Progress")
Gui.Progress..Size(1024,93)
Gui.Progress..MinX(0)
Gui.Progress..MinY(0)
Gui.Progress..Position(0,0)
Gui.Progress..AlwaysOnTop(False)
Gui.Progress..FontName("Tahoma")
Gui.Progress..FontSize(8.25)
Gui.Progress..ControlBox(True)
Gui.Progress..MaxButton(True)
Gui.Progress..MinButton(True)
Gui.Progress..MousePointer(0)
Gui.Progress..Moveable(True)
Gui.Progress..Sizeable(True)
Gui.Progress..ShowInTaskBar(True)
Gui.Progress..TitleBar(True)
Gui.Progress..Event(UnLoad,Progress_UnLoad)
Gui.Progress.ProMain.Create(ProgressBar)
Gui.Progress.ProMain.Visible(True)
Gui.Progress.ProMain.Size(996,7)
Gui.Progress.ProMain.Position(18,14)
Gui.Progress.proSub.Create(ProgressBar)
Gui.Progress.proSub.Visible(True)
Gui.Progress.proSub.Size(996,7)
Gui.Progress.proSub.Position(18,35)
Gui.Progress.lblProcess.Create(Label,"",False,1,13,0,19,47,True,0,"Tahoma",8.25,,0,0)
Gui.Progress.lblProcess.BorderStyle(0)
Program.Sub.ScreenSU.End


Program.Sub.Preflight.Start
v.Global.bLoad.Declare
v.Global.bSaveAllFile.Declare
v.Global.bProcessFromCache.Declare
v.Global.bProcess.Declare
v.Global.bCreateEA850.Declare
v.Global.bCompare.Declare
v.Global.bLoadRev.Declare
V.Global.bLoadCompare.Declare
Program.External.Include.Library("300010.lib",False)
Program.Sub.Preflight.End
Program.Sub.Main.Start
'BN July, 2019, modified to add Compare feature in Jan 2021, with much help from Jamie Papp
'Customer: Triple Inc.
'This project will merge 2 csv file (one is usually named as Commit, the other is usually named as Forecast) and upload the target file as EA850 EDI file to GSS.
'There are 2 types of Order in the 2 files: NON-LTA (numeric Orders) and LTA (Orders starting with alpha character, usually H or S)

'This project will:
'	Pull data from 3 csv files: Commit, Forecast, Rev. These files are EDI files sent from a wholesale customer UTAS to Triple, Inc.
'	Analyse the 3 files: basically the Commit and Forecast files will be used for uploading EDI orders into GSS. The Rev file will be used for matching inbound part rev with GSS part rev.
'	Commit file will be scanned, restructured and uploaded on the top left grid (1)
'	Forecast file will be scanned, restructured and uploaded on the top right grid (2)
'	2 files will be merged into the bottom left grid (3)
'	The bottom left grid (3) will be trimmed for grouping Overdue orders and will generate the bottom right grid (4)
'	The grid (4) will be used to upload EDI orders (used Rev file to lookup the Rev) and also to compare inbound EDI with orders existed in GSS

'The Columns button at Commit file path will pop up letting us map columns from csv file. You can change the column index based on the file you have. Basically, we need these columns in the file
'Like Commit file, forecast file it has the Columns mapping

'*** Click Save File Paths to save to registry so the next time open, the file paths will be auto populated
'*** The 3 files will be identified by the first 8 numeric character of the Commit file as Date. This tells the program where to pick the cache.

'If you run for the first time, click Process. It takes a few minutes to load 4 grids.
'After the processing, the 4 grids are cached in Global\Custom\6218\CCC\Cached with date stamp is the first 8 numeric character of the Commit file as Date

'After processing at step 4 is done, the button Create EA850 is activated. Click this button will generate a text file based on EDI standard EA850 from the grid 4. We will use this text file to upload EDI orders to GSS.

'Basically, we will have these categories of comparison:
'	Orders existed in GSS but nothing found in the inbound files using the key: Customer_PO
'	Orders existed in the inbound files but not thing found in GSS using the key: Customer_PO
'	Orders in GSS and inbound files FIRST LEVEL matched using the key Customer_PO
'For this matching, we have these sub-categories:
'*** LTA or NON-LTA
'*** Based on the criteria for matching LTA/NON-LTA:
'	If there is a matched, we call it Matched, a label will tell in this matched category if the qty/promised date is changed
'	If the lines exist in GSS but not in the Inbound files we call it Deleted
'	If the lines exist in the Inbound files but not in GSS, we call it Added

Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	f.ODBC.Connection!conx.OpenCompanyConnection(1000)
	
	f.Intrinsic.Control.CallSub("Check_and_Create_Folder")
	f.Intrinsic.Control.CallSub("Check_And_Create_DB")	
	
	f.Intrinsic.Control.CallSub("Bind_Commit_Columns_Settings")
	f.Intrinsic.Control.CallSub("Bind_Forecast_Columns_Settings")
	
	gui.Compare.txtCust.Text("HAMSTD")
	gui.Compare.txtCustRef.Text("UTAS")
	gui.Compare.txtSelectedCustomers.Text("HAMSTD")
	gui.Form..Show
	gui.Form..WindowState(2)
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.If(v.Global.bLoad)
	f.Intrinsic.Control.CallSub("Serialize")
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.Global.bLoadCompare)
	f.Intrinsic.Control.CallSub(Serialize_Compare)
	f.Intrinsic.Control.CallSub(Serialize_LTA)
	F.Intrinsic.Control.CallSub(Serialize_NONLTA)
	F.Intrinsic.Control.CallSub(Serialize_PART)
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.CallSub("Unload")
Program.Sub.Form_UnLoad.End

Program.Sub.Unload.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	F.Intrinsic.Control.If(V.ODBC.conx.State,=,1)
		F.ODBC.Connection!conx.close
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	Function.Intrinsic.String.Build("Subroutine Error {0}{0}Subroutine: {1}{0}Error Occurred {2} with description {3}",V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End	
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.Check_and_Create_Folder.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare	
	v.Local.sDir.Declare
	v.Local.bEx.Declare	
	v.Local.sFile.Declare
	v.Local.sContent.Declare
	
	'Check and create custom folder for project 6218
	f.Intrinsic.String.Build("{0}\Custom\6218",v.Caller.GlobalDir,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf

	f.Intrinsic.String.Build("{0}\Custom\6218\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	'Set Default folder:
	gui.Form.txtCommitFilePath.Text(v.Local.sDir)
	gui.Form.txtForecastFilePath.Text(v.Local.sDir)
	gui.Form.txtRevsource.Text(v.Local.sDir)
	
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf	
	
	'Check Default folder
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting\{2}_Commit.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sFile)
	f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sContent)
		gui.Form.txtCommitFilePath.Text(v.Local.sContent.Trim)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting\{2}_Rev.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sFile)
	f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sContent)
		gui.Form.txtRevsource.Text(v.Local.sContent.Trim)
	f.Intrinsic.Control.EndIf

	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting\{2}_Forecast.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sFile)
	f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sContent)
		gui.Form.txtForecastFilePath.Text(v.Local.sContent.Trim)
	f.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Check_and_Create_Folder.End

Program.Sub.Check_And_Create_DB.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bExist.Declare
	v.Local.bTable.Declare
	
	'Create custom table
	F.ODBC.Connection!conx.TableExists("GCG_6218_Rev",V.Local.bTable)
	F.Intrinsic.Control.If(v.Local.bTable.Not)
		F.ODBC.Connection!Conx.Execute("CREATE TABLE GCG_6218_Rev(OrderDocNo VARCHAR(30),Product VARCHAR(30),Rev VARCHAR(50) );")
	F.Intrinsic.Control.EndIf		
	
	F.ODBC.Connection!conx.TableExists("GCG_6218_Upl",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist,=,false)
		f.ODBC.Connection!conx.Execute("CREATE TABLE GCG_6218_Upl  ( FileHeader INTEGER, Num INTEGER, Type VARCHAR(7), Priority VARCHAR(100), Part VARCHAR(100), OpenQty INTEGER, OrderID VARCHAR(100), ItemID VARCHAR(100), Locn VARCHAR(100), ReqDate DATE, NumFromForecast INTEGER, A_1 CHAR(1), KeyFigure VARCHAR(100), UploadGridNum INTEGER, Order_No VARCHAR(200), UserID CHAR(8),Trmnl CHAR(3) );")
	f.Intrinsic.Control.Endif

	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Upl","sIndex","GCG_6218_Upl01")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Upl01 ON GCG_6218_Upl ( UserID, Trmnl);")
	f.Intrinsic.Control.EndIf	

	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Upl","sIndex","GCG_6218_Upl02")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Upl02 ON GCG_6218_Upl ( UserID, Trmnl,Type);")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Upl","sIndex","GCG_6218_Upl03")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Upl03 ON GCG_6218_Upl ( UserID,Trmnl,Order_No);")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Upl","sIndex","GCG_6218_Upl04")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Upl04 ON GCG_6218_Upl ( UserID, Trmnl,ReqDate);")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Upl","sIndex","GCG_6218_Upl05")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Upl05 ON GCG_6218_Upl ( UserID, Trmnl,UploadGridNum);")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Upl","sIndex","GCG_6218_Upl06")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Upl06 ON GCG_6218_Upl ( UserID, Trmnl,Type,Order_No);")
	f.Intrinsic.Control.EndIf		
	
	
	F.ODBC.Connection!conx.TableExists("GCG_6218_ComtColumns",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist,=,false)
		f.ODBC.Connection!conx.Execute("CREATE TABLE GCG_6218_ComtColumns  ( Priority INTEGER DEFAULT '0', Product_ID INTEGER DEFAULT '1', Open_Qty INTEGER DEFAULT '2', Order_ID INTEGER DEFAULT '4', Item_ID INTEGER DEFAULT '5', SCH_Line INTEGER DEFAULT '6', Location INTEGER DEFAULT '8', Req_Date INTEGER DEFAULT '9', OTD_Date INTEGER DEFAULT '10' );")
		f.ODBC.Connection!conx.Execute("Insert into GCG_6218_ComtColumns (Priority) values (0)")
	f.Intrinsic.Control.Endif	
	
	F.ODBC.Connection!conx.TableExists("GCG_6218_FcColumns",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist,=,false)
		f.ODBC.Connection!conx.Execute("CREATE TABLE GCG_6218_FcColumns  ( Product_No INTEGER DEFAULT '0', Key_Figure INTEGER DEFAULT '1', Cust_Loc_No INTEGER DEFAULT '2', OrderNo INTEGER DEFAULT '15', ItemNo INTEGER DEFAULT '16', Req_Date INTEGER DEFAULT '17', Period_0 INTEGER DEFAULT '18', NumberOfPeriod INTEGER DEFAULT '50' );")
		f.ODBC.Connection!conx.Execute("Insert into GCG_6218_FcColumns (Product_No) values (0)")
	f.Intrinsic.Control.Endif		
	
	F.ODBC.Connection!conx.TableExists("GCG_6218_Ord",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist,=,false)
		f.ODBC.Connection!conx.Execute("CREATE TABLE GCG_6218_Ord  ( UserID CHAR(8), Trmnl CHAR(3),SO CHAR(7), Line CHAR(4),Customer_PO CHAR(15), Part CHAR(20), CustomerPart CHAR(20),ComparePart CHAR(20),Date_Item_Prom DATE, POLine CHAR(30), Qty_Ordered NUMERIC(13,4), User_1 Char(30) );")
	f.Intrinsic.Control.Endif	
	
	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Ord","sIndex","GCG_6218_Ord01")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Ord01 ON GCG_6218_Ord ( UserID, Trmnl);")
	f.Intrinsic.Control.EndIf	

	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Ord","sIndex","GCG_6218_Ord02")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Ord02 ON GCG_6218_Ord ( UserID, Trmnl,Customer_PO);")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.CallSub("Check_Index","sTable","GCG_6218_Ord","sIndex","GCG_6218_Ord03")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!conx.Execute("CREATE INDEX GCG_6218_Ord03 ON GCG_6218_Ord ( UserID, Trmnl,Customer_PO,SO,Line);")
	f.Intrinsic.Control.EndIf		
	
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
	
Program.Sub.Check_And_Create_DB.End

Program.Sub.Check_Index.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.bExist.Declare
	
	f.Intrinsic.String.Build("Select Xf$Name As TableName,F1.XE$Name As FieldName,F1.Xe$DataType as DataType FROM X$File INNER JOIN X$Field F1 On F1.XE$File = XF$ID WHERE Xf$Name = '{0}' and F1.XE$Name = '{1}'",v.Args.sTable,v.Args.sIndex,v.Local.sSQL)
	f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF.Not)
		v.Local.bExist.Set(True)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("bExist",v.Local.bExist)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
	'if any error, assume the index exists
	f.Intrinsic.Variable.AddRV("bExist",True)
F.Intrinsic.Control.EndTry
Program.Sub.Check_Index.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare
	v.Local.iCnt.Declare
	v.Local.sGrid.Declare
	v.Local.sControls.Declare
	v.Local.sControl.Declare
	
	f.Intrinsic.String.Split("gvCmt,gvForecast,gvMerged,gvUpload",",",v.Local.sGrid)
	f.Intrinsic.String.Split("gsCommit,gsForecast,gsMerged,gsUpload",",",v.Local.sControls)
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sGrid.UBound,1)
		v.Local.sControl.Set(v.Local.sControls(v.Local.iCnt))
		Gui.Form.[v.Local.sControl].Serialize(v.Local.sGrid(v.Local.iCnt),V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,v.Local.sGrid(v.Local.iCnt),6218,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)			
	f.Intrinsic.Control.Next(v.Local.iCnt)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End
Program.Sub.Serialize_Compare.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare

	gui.Compare.gsBoth.Serialize("gvCompare",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVCOMPARE",6218,3001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Serialize_Compare.End

Program.Sub.Deserialize_Compare.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare

	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVCOMPARE",6218,3001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		gui.Compare.gsBoth.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize_Compare.End

Program.Sub.Serialize_LTA.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare

	gui.Compare.gsLTA.Serialize("gvLTA",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVLTA",6218,3002,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Serialize_LTA.End

Program.Sub.Deserialize_LTA.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare

	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVLTA",6218,3002,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		gui.Compare.gsLTA.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize_LTA.End

Program.Sub.Serialize_NONLTA.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare

	gui.Compare.gsNONLTA.Serialize("gvNONLTA",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVNONLTA",6218,3003,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Serialize_NONLTA.End

Program.Sub.Deserialize_NONLTA.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare

	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVNONLTA",6218,3003,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		gui.Compare.gsNONLTA.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize_NONLTA.End

Program.Sub.Serialize_PART.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare

	gui.Compare.gsPart.Serialize("gvPart",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVPART",6218,3004,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Serialize_PART.End

Program.Sub.Deserialize_PART.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare

	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVPART",6218,3004,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		gui.Compare.gsPart.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize_PART.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare
	v.Local.iCnt.Declare
	v.Local.sGrid.Declare
	v.Local.sControls.Declare
	v.Local.sControl.Declare
	
	f.Intrinsic.String.Split("gvCmt,gvForecast,gvMerged,gvUpload",",",v.Local.sGrid)
	f.Intrinsic.String.Split("gsCommit,gsForecast,gsMerged,gsUpload",",",v.Local.sControls)		
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sGrid.UBound,1)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,v.Local.sGrid(v.Local.iCnt),6218,1001,6,"",V.Local.sSerialize)
		v.Local.sControl.Set(v.Local.sControls(v.Local.iCnt))
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			Gui.Form.[v.Local.sControl].Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.Next(v.Local.iCnt)	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Bind_Commit_Columns_Settings.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	v.Local.sProperty.Declare
	v.Local.sPropertyValue.Declare
	
	f.Intrinsic.Control.If(v.DataTable.CommitColumns.Exists)
		f.Data.DataTable.Close("CommitColumns")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("CommitColumns","conx","Select Top 1 * from GCG_6218_ComtColumns",True)
	f.Intrinsic.Control.If(v.DataTable.CommitColumns.RowCount,=,0)
		f.ODBC.Connection!conx.Execute("Insert into GCG_6218_ComtColumns (Priority) values (0)")
		f.Data.DataTable.Close("CommitColumns")
		f.Data.DataTable.CreateFromSQL("CommitColumns","conx","Select Top 1 * from GCG_6218_ComtColumns",True)
	f.Intrinsic.Control.EndIf
	gui.CommitColumns.gsCommitColumns.AddGridviewFromDatatable("gvCommitColumns","CommitColumns")
	gui.CommitColumns.gsCommitColumns.SetGridviewProperty("gvCommitColumns","Showgrouppanel",False)
	
	v.Local.sProperty.Set("AllowEdit")
	v.Local.sPropertyValue.set("True")
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Priority",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Product_ID",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Open_Qty",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Order_ID",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Item_ID",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","SCH_Line",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Location",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Req_Date",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","OTD_Date",v.Local.sProperty,v.Local.sPropertyValue)
	v.Local.sProperty.Set("ReadOnly")
	v.Local.sPropertyValue.Set("False")
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Priority",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Product_ID",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Open_Qty",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Order_ID",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Item_ID",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","SCH_Line",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Location",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","Req_Date",v.Local.sProperty,v.Local.sPropertyValue)
	gui.CommitColumns.gsCommitColumns.SetColumnProperty("gvCommitColumns","OTD_Date",v.Local.sProperty,v.Local.sPropertyValue)
	
	gui.CommitColumns.gsCommitColumns.MainView("gvCommitColumns")	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Bind_Commit_Columns_Settings.End

Program.Sub.Bind_Forecast_Columns_Settings.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	v.Local.sProperty.Declare
	v.Local.sPropertyValue.Declare
	
	f.Intrinsic.Control.If(v.DataTable.ForeCastColumns.Exists)
		f.Data.DataTable.Close("ForeCastColumns")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("ForeCastColumns","conx","Select Top 1 * from GCG_6218_FcColumns",True)
	f.Intrinsic.Control.If(v.DataTable.ForeCastColumns.RowCount,=,0)
		f.ODBC.Connection!conx.Execute("Insert into GCG_6218_FcColumns (Product_No) values (0)")
		f.Data.DataTable.Close("ForeCastColumns")
		f.Data.DataTable.CreateFromSQL("ForeCastColumns","conx","Select Top 1 * from GCG_6218_FcColumns",True)
	f.Intrinsic.Control.EndIf
	gui.ForeCastColumns.gsForeCastColumns.AddGridviewFromDatatable("gvForeCastColumns","ForeCastColumns")
	gui.ForeCastColumns.gsForeCastColumns.SetGridviewProperty("gvForeCastColumns","Showgrouppanel",False)
	
	v.Local.sProperty.Set("AllowEdit")
	v.Local.sPropertyValue.set("True")
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Product_no",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Key_Figure",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Cust_Loc_No",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","OrderNo",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","ItemNo",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Req_Date",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Period_0",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","NumberOfPeriod",v.Local.sProperty,v.Local.sPropertyValue)
	v.Local.sProperty.Set("ReadOnly")
	v.Local.sPropertyValue.Set("False")
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Product_no",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Key_Figure",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Cust_Loc_No",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","OrderNo",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","ItemNo",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Req_Date",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","Period_0",v.Local.sProperty,v.Local.sPropertyValue)
	gui.ForeCastColumns.gsForeCastColumns.SetColumnProperty("gvForeCastColumns","NumberOfPeriod",v.Local.sProperty,v.Local.sPropertyValue)
	
	gui.ForeCastColumns.gsForeCastColumns.MainView("gvForeCastColumns")	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.Bind_Forecast_Columns_Settings.End

Program.Sub.gsCommitColumns_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sSQL.Declare
	
	f.Intrinsic.String.Build("Update GCG_6218_ComtColumns set Priority = '{0}',Product_ID = '{1}',Open_Qty = '{2}',Order_ID = '{3}',Item_Id = '{4}',Sch_Line = '{5}',Location = '{6}',Req_Date = '{7}',Otd_Date = '{8}'",v.DataTable.CommitColumns(v.Args.RowIndex).Priority!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Product_ID!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Open_Qty!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Order_ID!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Item_Id!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Sch_Line!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Location!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Req_Date!FieldValString,v.DataTable.CommitColumns(v.Args.RowIndex).Otd_Date!FieldValString,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)


F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.gsCommitColumns_CellValueChanged.End

Program.Sub.gsForecastColumns_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sSQL.Declare
	
	f.Intrinsic.String.Build("Update GCG_6218_FcColumns set Product_No = '{0}',Key_Figure = '{1}',Cust_Loc_No = '{2}',OrderNo = '{3}',ItemNo = '{4}',Req_Date = '{5}',Period_0 = '{6}',NumberOfPeriod = '{7}'",v.DataTable.ForeCastColumns(v.Args.RowIndex).Product_No!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).Key_Figure!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).Cust_Loc_No!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).OrderNo!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).ItemNo!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).Req_Date!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).Period_0!FieldValString,v.DataTable.ForeCastColumns(v.Args.RowIndex).NumberOfPeriod!FieldValString,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)


F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.gsForecastColumns_CellValueChanged.End

Program.Sub.ForecastColumns_UnLoad.Start
gui.ForecastColumns..Visible(False)
Program.Sub.ForecastColumns_UnLoad.End

Program.Sub.RevColumns_UnLoad.Start
gui.RevColumns..Visible(False)
Program.Sub.RevColumns_UnLoad.End

Program.Sub.cmdColumns4CommitFile_Click.Start
gui.CommitColumns..Visible(True)
Program.Sub.cmdColumns4CommitFile_Click.End

Program.Sub.CommitColumns_UnLoad.Start
gui.CommitColumns..Visible(False)
Program.Sub.CommitColumns_UnLoad.End

Program.Sub.cmdColumns4ForecastFile_Click.Start
gui.ForecastColumns..Visible(True)
Program.Sub.cmdColumns4ForecastFile_Click.End

Program.Sub.cmdColumns4RevFile_Click.Start
gui.RevColumns..Visible(True)
Program.Sub.cmdColumns4RevFile_Click.End

Program.Sub.gsRevColumns_CellValueChanged.Start
Program.Sub.gsRevColumns_CellValueChanged.End

Program.Sub.cmdBrowseCommitFile_Click.Start
'CommitFileBrowser
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sFilePath.Declare
	v.Local.sDir.Declare
	
	'Default folder
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	F.Intrinsic.UI.ShowOpenFileDialog(V.Local.sDir,"*|*.csv*","",V.Local.sFilePath)
	F.Intrinsic.Control.If(V.Local.sFilePath,=,"***CANCEL***")
		F.Intrinsic.UI.Msgbox("No File Was Selected")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	gui.Form.txtCommitFilePath.Text(v.Local.sFilePath)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseCommitFile_Click.End

Program.Sub.cmdBrowseForecastFile_Click.Start
'BrowseForecastFile
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sFilePath.Declare
	v.Local.sDir.Declare
	
	'Default folder
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	F.Intrinsic.UI.ShowOpenFileDialog(V.Local.sDir,"*|*.csv*","",V.Local.sFilePath)
	F.Intrinsic.Control.If(V.Local.sFilePath,=,"***CANCEL***")
		F.Intrinsic.UI.Msgbox("No File Was Selected")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	gui.Form.txtForecastFilePath.Text(v.Local.sFilePath)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseForecastFile_Click.End

Program.Sub.cmdBrowseRevSource_Click.Start
'BrowseRevSource
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sFilePath.Declare
	v.Local.sDir.Declare
	
	'Default folder
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	F.Intrinsic.UI.ShowOpenFileDialog(V.Local.sDir,"*|*.csv","",V.Local.sFilePath)
	F.Intrinsic.Control.If(V.Local.sFilePath,=,"***CANCEL***")
		F.Intrinsic.UI.Msgbox("No File Was Selected")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	gui.Form.txtRevsource.Text(v.Local.sFilePath)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseRevSource_Click.End

Program.Sub.cmdSaveDefault_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	v.Local.sFile.Declare
	
	f.Intrinsic.Control.If(v.Global.bSaveAllFile)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bSaveAllFile.Set(True)
		
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting\{2}_Commit.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Screen.Form!txtCommitFilePath.Text.Trim)
	
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting\{2}_Rev.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Screen.Form!txtRevsource.Text.Trim)
	
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Setting\{2}_Forecast.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Screen.Form!txtForecastFilePath.Text.Trim)	
	v.Global.bSaveAllFile.Set(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project 6218 - GCG_6218_EDI_Compare.g2u: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload") 
F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveDefault_Click.End

Program.Sub.cmdLoadRevSource_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.iMaxOfLines.Declare
	v.Local.sInputString.Declare
	v.Local.sHeader.Declare
	v.Local.sDataType.Declare
	v.Local.bEx.Declare
	v.Local.sContent.Declare
	v.Local.iCnt.Declare
	
	'Check File exist
	f.Intrinsic.File.Exists(v.Screen.Form!txtRevsource.Text.Trim,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.UI.Msgbox("File does not exist.","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	'Read Excel spreadsheet
	'v.Local.iMaxOfLines.Set(v.Screen.Form!txtMaxLine.Text.Trim)
	'Function.Automation.MSExcel.ReadSpreadsheet(v.Screen.Form!txtRevsource.Text.Trim,20,v.Local.iMaxOfLines,v.Local.sInputString)
	'Get content of the file
	f.Intrinsic.File.File2String(v.Screen.Form!txtRevsource.Text.Trim,v.Local.sContent)
	
	v.Local.sHeader.Set("OrderDocNo*!*ItemNo*!*TotalShippableQty*!*ShipHorVal*!*SSIExempt*!*OrderDocType*!*DueQty*!*SLNo*!*Product*!*CustomerLoc*!*Ship-FromLoc*!*Ship-ToLoc*!*GoodsRecipient*!*DueOn*!*UnitofMeasure*!*ShipDate*!*DelivDate*!*PurchGroup*!*StatDelDate*!*RevLvl")
	v.Local.sDataType.Set("String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String")
	F.Data.DataTable.CreateFromString("Rev",v.Local.sContent,v.Local.sHeader,v.Local.sDataType,",",v.Ambient.NewLine,TRUE)

	
	f.Data.DataView.Create("Rev","dvRev",22,"OrderDocNo <> ''","OrderDocNo,Product")
	f.Data.DataView.ToDataTable("Rev","dvRev","RevReal",True)
	f.Data.DataTable.Close("Rev")
	f.Data.DataTable.AddExpressionColumn("RevReal","Rev","String","IIF([RevLvl] = '-','NC',[RevLvl])")
	f.Data.DataTable.AddExpressionColumn("RevReal","OrderPart","String","[OrderDocNo] + '@' + [Product]")
	f.ODBC.Connection!conx.Execute("Delete from GCG_6218_Rev")
	f.Data.DataTable.SaveToDB("RevReal","conx","GCG_6218_Rev","",128,"OrderDocNo@!@OrderDocNo*!*Product@!@Product*!*Rev@!@Rev")
	
	'Create dictionary
	f.Data.Dictionary.Exists("RevDict",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("RevDict")
	f.Intrinsic.Control.EndIf
	f.Data.Dictionary.createFromDataTable("RevDict","RevReal","OrderPart","Rev")
	f.Data.Dictionary.SetDefaultReturn("RevDict","")	
	f.Data.DataTable.Close("RevReal")

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdLoadRevSource_Click.End

Program.Sub.cmdProcess_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bEx.Declare
	v.Local.sCommitFile.Declare
	v.Local.sForecastFile.Declare
	
	f.Intrinsic.Control.If(v.Global.bProcess)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bProcess.Set(True)
		
	'Check file existing
	v.Local.sCommitFile.Set(v.Screen.Form!txtCommitFilePath.text.trim)
	v.Local.sForecastFile.Set(v.Screen.Form!txtForecastFilePath.text.trim)
	f.Intrinsic.File.Exists(v.Local.sCommitFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.UI.Msgbox("Commit File does not exist")
		v.Global.bProcess.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.File.Exists(v.Local.sForecastFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.UI.Msgbox("Forecast File does not exist")
		v.Global.bProcess.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.Global.bLoad)
		f.Intrinsic.Control.CallSub("Serialize")
	f.Intrinsic.Control.EndIf	
	
	gui.Form.lblProcess.Visible(True)
	
	'For cache in Custom\6218\Cache
	f.Intrinsic.Control.CallSub("Get_File_Header_Create_XMLFileNames","sCommitFile",v.Local.sCommitFile)
	
	f.Intrinsic.Control.CallSub("Parse_Commit_File")
	f.Intrinsic.Control.CallSub("Parse_Forecast_File")
	f.Intrinsic.Control.CallSub("Merge_Tables","sCommitFileHeader",v.Args.sCommitFileHeader)
	
	'Activate buttons
	f.Intrinsic.Control.If(v.DataTable.UploadTB.Exists)
		f.Intrinsic.Control.If(v.DataTable.UploadTB.RowCount,>,0)
			gui.Form.cmdCreateEA850.Enabled(True)
			gui.Form.cmdExport.Enabled(True)
			gui.Form.cmdOpenCompareForm.Enabled(True)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	'Save to cache	
	F.Data.DataTable.SaveToXML("CMT",0,True,V.Args.sXMLCommit)
	F.Data.DataTable.SaveToXML("Forecast",0,True,V.Args.sXMLForecast)
	F.Data.DataTable.SaveToXML("MergedTB",0,True,V.Args.sXMLMerged)
	F.Data.DataTable.SaveToXML("UploadTB",0,True,V.Args.sXMLUpload)
	f.Intrinsic.Control.CallSub("Deserialize")
	v.Global.bLoad.Set(True)
	gui.Form.lblProcess.Visible(False)
	v.Global.bProcess.Set(False)
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdProcess_Click.End

Program.Sub.cmdProcessFromCache_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare	
	v.Local.bEx.Declare
	v.Local.sCommitFile.Declare
	v.Local.sHold.Declare
	
	f.Intrinsic.Control.If(v.Global.bProcessFromCache)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bProcessFromCache.Set(True)
	
	'Check file existing
	v.Local.sCommitFile.Set(v.Screen.Form!txtCommitFilePath.text.trim)
	f.Intrinsic.File.Exists(v.Local.sCommitFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.UI.Msgbox("Commit File does not exist")
		v.Global.bProcessFromCache.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub("Get_File_Header_Create_XMLFileNames","sCommitFile",v.Local.sCommitFile)
	'Check if cache XML files exist
	f.Intrinsic.File.Exists(v.Args.sXMLCommit,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Args.sXMLCommit,v.Local.sHold)
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		v.Global.bProcessFromCache.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	f.Intrinsic.File.Exists(v.Args.sXMLForecast,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Args.sXMLForecast,v.Local.sHold)
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		v.Global.bProcessFromCache.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.File.Exists(v.Args.sXMLMerged,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Args.sXMLMerged,v.Local.sHold)
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		v.Global.bProcessFromCache.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.File.Exists(v.Args.sXMLUpload,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Args.sXMLUpload,v.Local.sHold)
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		v.Global.bProcessFromCache.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.Global.bLoad)
		f.Intrinsic.Control.CallSub("Serialize")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.CMT.Exists)
		f.Data.DataTable.Close("CMT")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.Forecast.Exists)
		f.Data.DataTable.Close("Forecast")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.MergedTB.Exists)
		f.Data.DataTable.Close("MergedTB")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.UploadTB.Exists)
		f.Data.DataTable.Close("UploadTB")
	f.Intrinsic.Control.EndIf	
	
	F.Data.DataTable.CreateFromXML("CMT",V.Args.sXMLCommit,True)	
	F.Data.DataTable.CreateFromXML("Forecast",V.Args.sXMLForecast,True)	
	F.Data.DataTable.CreateFromXML("MergedTB",V.Args.sXMLMerged,True)	
	F.Data.DataTable.CreateFromXML("UploadTB",V.Args.sXMLUpload,True)	
	
	f.Intrinsic.Control.CallSub("Format_gsCommit")
	f.Intrinsic.Control.CallSub("Format_gsForecast")
	f.Intrinsic.Control.CallSub("Format_gsMerged")
	f.Intrinsic.Control.CallSub("Format_gsUpload")

	gui.Form.cmdCreateEA850.Enabled(True)
	gui.Form.cmdExport.Enabled(True)
	gui.Form.cmdOpenCompareForm.Enabled(True)
	
	f.Intrinsic.Control.CallSub("Deserialize")
	v.Global.bLoad.Set(True)
	v.Global.bProcessFromCache.Set(False)
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdProcessFromCache_Click.End

Program.Sub.Get_File_Header_Create_XMLFileNames.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bEx.Declare
	v.Local.sCommitFile.Declare
	v.Local.sCommitFileHeader.Declare
	v.Local.sForecastFile.Declare
	v.Local.sFileName.Declare	
	v.Local.sXMLCommit.Declare
	v.Local.sXMLForecast.Declare
	v.Local.sXMLMerged.Declare
	v.Local.sXMLUpload.Declare	
	v.Local.sXMLCompare.Declare
	
	'Check file existing
	f.Intrinsic.String.Split(v.Args.sCommitFile,"\",v.Local.sCommitFile)
	v.Local.sFileName.Set(v.Local.sCommitFile(v.Local.sCommitFile.UBound))
	f.Intrinsic.String.Replace(v.Local.sFileName,".csv","",v.Local.sCommitFile)
	f.Intrinsic.String.Split(v.Local.sFileName,"_",v.Local.sCommitFile)
	v.Local.sCommitFileHeader.Set(v.Local.sCommitFile(0))
		
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Commit_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.local.sCommitFileHeader,v.Local.sXMLCommit)
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Forecast_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.local.sCommitFileHeader,v.Local.sXMLForecast)
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Merged_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.local.sCommitFileHeader,v.Local.sXMLMerged)
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Upload_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.local.sCommitFileHeader,v.Local.sXMLUpload)
	
	f.Intrinsic.Variable.AddRV("sCommitFileHeader",v.Local.sCommitFile)
	f.Intrinsic.Variable.AddRV("sXMLCommit",v.Local.sXMLCommit)
	f.Intrinsic.Variable.AddRV("sXMLForecast",v.Local.sXMLForecast)
	f.Intrinsic.Variable.AddRV("sXMLMerged",v.Local.sXMLMerged)
	f.Intrinsic.Variable.AddRV("sXMLUpload",v.Local.sXMLUpload)
	f.Intrinsic.Variable.AddRV("sXMLCompare",v.Local.sXMLCompare)
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Get_File_Header_Create_XMLFileNames.End

Program.Sub.Parse_Commit_File.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sCommitContent.Declare
	v.Local.iCnt.Declare
	v.Local.sLine.Declare
	v.Local.iHold.Declare
	v.Local.bNumeric.Declare
	v.Local.sLTAType.Declare
	v.Local.fOpenQty.Declare
	v.Local.dReqDate.Declare
	v.Local.bDate.Declare
	v.Local.sOrderID.Declare
	v.Local.iOrderID.Declare	
	
	v.Local.iPriority.Declare
	v.Local.iProduct_ID.Declare
	v.Local.iOpen_Qty.Declare
	v.Local.iOrdID_.Declare
	v.Local.iItem_ID.Declare
	v.Local.iSCH_Line.Declare
	v.Local.iLocation.Declare
	v.Local.iReq_Date.Declare
	v.Local.iOTD_Date.Declare
	
	'Set default column index
	v.Local.iPriority.Set(0)
	v.Local.iProduct_ID.Set(1)
	v.Local.iOpen_Qty.Set(2)
	v.Local.iOrdID_.Set(4)
	v.Local.iItem_ID.Set(5)
	v.Local.iSCH_Line.Set(6)
	v.Local.iLocation.Set(8)
	v.Local.iReq_Date.Set(9)
	v.Local.iOTD_Date.Set(10)	
	
	'Get csv column index
	f.Intrinsic.Control.If(v.DataTable.CommitColumns.Exists)
		f.Intrinsic.Control.If(v.DataTable.CommitColumns.RowCount,>,0)
			v.Local.iPriority.Set(v.Datatable.CommitColumns(0).Priority!FieldValString)
			v.Local.iProduct_ID.Set(v.Datatable.CommitColumns(0).Product_ID!FieldValString)
			v.Local.iOpen_Qty.Set(v.Datatable.CommitColumns(0).Open_Qty!FieldValString)
			v.Local.iOrdID_.Set(v.Datatable.CommitColumns(0).ORder_ID!FieldValString)
			v.Local.iItem_ID.Set(v.Datatable.CommitColumns(0).Item_ID!FieldValString)
			v.Local.iSCH_Line.Set(v.Datatable.CommitColumns(0).SCH_Line!FieldValString)
			v.Local.iLocation.Set(v.Datatable.CommitColumns(0).Location!FieldValString)
			v.Local.iReq_Date.Set(v.Datatable.CommitColumns(0).Req_Date!FieldValString)
			v.Local.iOTD_Date.Set(v.Datatable.CommitColumns(0).OTD_Date!FieldValString)			
		f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub("cmdLoadRevSource_Click")

	f.Intrinsic.File.File2String(v.Screen.Form!txtCommitFilePath.Text.Trim,v.Local.sCommitContent)
	f.Intrinsic.String.Split(v.Local.sCommitContent,v.Ambient.NewLine,v.Local.sCommitContent)
	
	f.Intrinsic.Control.If(v.DataTable.CMT.Exists)
		f.Data.DataTable.Close("CMT")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("CMT",True)	
	f.Data.DataTable.AddColumn("CMT","Num","Long")
	f.Data.DataTable.AddColumn("CMT","Type","String","")
	f.Data.DataTable.AddColumn("CMT","Priority","String","")
	f.Data.DataTable.AddColumn("CMT","PartNoRev","String","")
	f.Data.DataTable.AddColumn("CMT","Rev","String","")
	f.Data.DataTable.AddColumn("CMT","OpenQty","float",0)
	f.Data.DataTable.AddColumn("CMT","OrderID","String","")
	f.Data.DataTable.AddColumn("CMT","ItemID","String","")
	f.Data.DataTable.AddColumn("CMT","SchLine","String","")
	f.Data.DataTable.AddColumn("CMT","Locn","String","")
	f.Data.DataTable.AddColumn("CMT","ReqDate","Date","01-01-1900")
	f.Data.DataTable.AddColumn("CMT","OTDDate","String","")
	
	'Loop the sCommitContent
	f.Intrinsic.Math.Add(v.Local.sCommitContent.UBound,1,v.Local.iHold)
	gui.Form.proBar1.Visible(True)
	gui.Form.proBar1.Max(v.Local.iHold)
		
	f.Intrinsic.Control.For(v.Local.iCnt,13,v.Local.sCommitContent.UBound,1)
		'Set indicator
		gui.Form.proBar1.Value(v.Local.iCnt)
		
		f.Intrinsic.String.Split(v.Local.sCommitContent(v.Local.iCnt),",",v.Local.sLine)

		f.Intrinsic.Control.If(v.Local.sLine(1).Trim,<>,"OOB")
			'Check LTA/Non-LTA
			f.Intrinsic.Math.IsNumeric(v.Local.sLine(v.Local.iOrdID_).Trim,v.Local.bNumeric)
			f.Intrinsic.Control.If(v.Local.bNumeric)
				v.Local.sLTAType.Set("NON-LTA")
				v.Local.iOrderID.Set(v.Local.sLine(v.Local.iOrdID_).Trim)
				v.Local.sOrderID.Set(v.Local.iOrderID)
			f.Intrinsic.Control.Else
				V.Local.sLTAType.Set("LTA")
				v.Local.sOrderID.Set(v.Local.sLine(v.Local.iOrdID_).Trim)
			f.Intrinsic.Control.EndIf
			
			'Get OpenQty
			f.Intrinsic.Math.IsNumeric(v.Local.sLine(v.Local.iOpen_Qty).Trim,v.Local.bNumeric)
			f.Intrinsic.Control.If(v.Local.bNumeric)
				v.Local.fOpenQty.Set(v.Local.sLine(v.Local.iOpen_Qty).Trim)
			f.Intrinsic.Control.Else
				v.Local.fOpenQty.Set(0)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Date.IsDate(v.Local.sLine(v.Local.iReq_Date).Trim,v.Local.bDate)
			f.Intrinsic.Control.If(v.Local.bDate)
				v.Local.dReqDate.Set(v.Local.sLine(v.Local.iReq_Date).Trim)
			f.Intrinsic.Control.Else
				v.Local.dReqDate.Set("01/01/1900")
			f.Intrinsic.Control.EndIf
			
			f.Data.DataTable.AddRow("CMT","Type",v.Local.sLTAType,"Priority",v.Local.sLine(v.Local.iPriority).Trim,"PartNoRev",v.Local.sLine(v.Local.iProduct_ID).Trim,"OpenQty",v.Local.fOpenQty,"OrderID",v.Local.sOrderID,"ItemID",v.Local.sLine(v.Local.iItem_ID).Trim,"SchLine",v.Local.sLine(v.Local.iSCH_Line).Trim,"Locn",v.Local.sLine(v.Local.iLocation).Trim,"ReqDate",v.Local.dReqDate,"OTDDate",v.Local.sLine(v.Local.iOTD_Date).Trim)		
		f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	f.Data.DataTable.AddExpressionColumn("CMT","OrderPart","String","[OrderID] + '@' + [PartNoRev]")
	f.Data.Datatable.FillFromDictionary("CMT","RevDict","OrderPart","Rev")
	f.Data.DataTable.AddExpressionColumn("CMT","PartNoRev17","String","SubString([PartNoRev] + '                    ',1,17)")
	f.Data.DataTable.AddExpressionColumn("CMT","Part","String","[PartNoRev17] + [Rev]")
	gui.Form.proBar1.Visible(False)
	
	'Set series as for displaying Excel line number
	f.Data.DataTable.SetSeries("CMT","Num",14,1)	
	f.Intrinsic.Control.CallSub("Format_gsCommit")
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Parse_Commit_File.End

Program.Sub.Format_gsCommit.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	'Add and Format grid Commit
	gui.Form.gsCommit.AddGridviewFromDatatable("gvCmt","CMT")
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","AllowSort",True)
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","AllowFilter",True)
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","OptionsFindAlwaysVisible",True)
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","EnableAppearanceOddRow",False)
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","OptionsViewShowAutoFilterRow",True)
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","AllowColumnResizing",True)
	Gui.Form.gsCommit.SetGridViewProperty("gvCmt","OptionsViewColumnAutoWidth",False)
	gui.Form.gsCommit.SetGridviewProperty("gvCmt","Showgrouppanel",True)
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Num","Width","35")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Type","Width","50")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Priority","Width","45")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Part","Width","130")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","OpenQty","Width","75")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","ItemID","Width","45")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","SchLine","Width","35")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Locn","Width","40")
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Part","Visibleindex",3)
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Locn","Visibleindex",4)
	gui.Form.gsCommit.SetColumnProperty("gvCmt","OpenQty","Visibleindex",8)
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","OrderPart","Visible",False)
	gui.Form.gsCommit.SetColumnProperty("gvCmt","PartNoRev","Visible",False)
	gui.Form.gsCommit.SetColumnProperty("gvCmt","PartNoRev17","Visible",False)
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Rev","Visible",False)
		
	gui.Form.gsCommit.SetColumnProperty("gvCmt","OpenQty","CellHAlignment","far")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","OpenQty","HeaderHAlignment","far")
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","ItemID","CellHAlignment","far")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","ItemID","HeaderHAlignment","far")
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","SchLine","CellHAlignment","far")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","SchLine","HeaderHAlignment","far")	
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","Num","HeaderHAlignment","far")	
	
	gui.Form.gsCommit.SetColumnProperty("gvCmt","OpenQty","DisplayCustomNumeric","###,###,###,###")
	
	gui.Form.gsCommit.AddSummaryItem("gvCmt","OpenQty","SumCmtOpenQty","Sum","","","n")
	gui.Form.gsCommit.SetColumnProperty("gvCmt","ReqDate","DisplayCustomDatetime","d")	'
	
	gui.Form.gsCommit.AddSummaryItem("gvCmt","Part","Part","Count","Total Row: ","",n0)	
	gui.Form.gsCommit.AddGridGroupSummaryItem("gvCmt","Part","PartGroup","Count","Tt Row: "," ","n0")
	gui.Form.gsCommit.AddGridGroupSummaryItem("gvCmt","OpenQty","OpenQtyGroup","Sum","Tt OpenQty : "," ","n0")	
		
	gui.Form.gsCommit.MainView("gvCmt")	
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Format_gsCommit.End

Program.Sub.Parse_Forecast_File.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sForecastContent.Declare
	v.Local.iCnt.Declare
	v.Local.sLine.Declare
	v.Local.iHold.Declare
	v.Local.sHold.Declare
	v.Local.sPreviousPart.Declare
	v.Local.sPreviousFlag.Declare
	v.Local.sCurrentPart.Declare
	v.Local.sCurrentFlag.Declare
	
	v.local.sMonth.Declare
	v.Local.sDate.Declare
	v.Local.dDate.Declare	
	
	v.Local.sExpression.Declare
	v.Local.iInner.Declare
	v.Local.iPeriod.Declare
	v.Local.bNumeric.Declare

	v.Local.sCurrentLocn.Declare
	v.Local.sPreviousLocn.Declare

	v.Local.fTotal.Declare
	v.Local.fCulmulated.Declare
	
	v.Local.sLTAType.Declare
	v.Local.dReqDeliveryDate.Declare
	v.Local.bDate.Declare
	v.Local.iOrderID.Declare
	v.Local.sOrderID.Declare
	
	v.Local.iProduct_No.Declare
	v.Local.iKey_Figure.Declare
	v.Local.iCust_Loc_No.Declare
	v.Local.iOrderNo.Declare
	v.Local.iItemNo.Declare
	v.Local.iReq_Date.Declare
	v.Local.iPeriod_0.Declare
	v.Local.iNumberOfPeriod.Declare
	v.Local.iPeriodUbound.Declare
	
	'Set default csv column index
	v.Local.iProduct_No.Set(0)
	v.Local.iKey_Figure.Set(1)
	v.Local.iCust_Loc_No.Set(2)
	v.Local.iOrderNo.Set(15)
	v.Local.iItemNo.Set(16)
	v.Local.iReq_Date.Set(17)
	v.Local.iPeriod_0.Set(18)
	v.Local.iNumberOfPeriod.Set(50)
	'Set csv column index
	f.Intrinsic.Control.If(v.DataTable.ForeCastColumns.Exists)
		f.Intrinsic.Control.If(v.DataTable.ForeCastColumns.RowCount,>,0)
			v.Local.iProduct_No.Set(v.Datatable.ForeCastColumns(0).Product_No!FieldValString)
			v.Local.iKey_Figure.Set(v.Datatable.ForeCastColumns(0).Key_Figure!FieldValString)
			v.Local.iCust_Loc_No.Set(v.Datatable.ForeCastColumns(0).Cust_Loc_No!FieldValString)
			v.Local.iOrderNo.Set(v.Datatable.ForeCastColumns(0).OrderNo!FieldValString)
			v.Local.iItemNo.Set(v.Datatable.ForeCastColumns(0).ItemNo!FieldValString)
			v.Local.iReq_Date.Set(v.Datatable.ForeCastColumns(0).Req_Date!FieldValString)
			v.Local.iPeriod_0.Set(v.Datatable.ForeCastColumns(0).Period_0!FieldValString)
			v.Local.iNumberOfPeriod.Set(v.Datatable.ForeCastColumns(0).NumberOfPeriod!FieldValString)		
		f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.EndIf		
	
	f.Intrinsic.File.File2String(v.Screen.Form!txtForecastFilePath.Text.Trim,v.Local.sForecastContent)
	f.Intrinsic.String.Replace(v.Local.sForecastContent,v.Ambient.DblQuote,"",v.Local.sForecastContent)
	f.Intrinsic.String.Split(v.Local.sForecastContent,v.Ambient.NewLine,v.Local.sForecastContent)
	
	f.Intrinsic.Control.If(v.DataTable.Forecast.Exists)
		f.Data.DataTable.Close("Forecast")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("Forecast",True)
	
	'Add Columns
	f.Data.DataTable.AddColumn("Forecast","Num","Long")
	f.Data.DataTable.AddColumn("Forecast","Add","String","")
	f.Data.DataTable.AddColumn("Forecast","Type","String","")
	f.Data.DataTable.AddColumn("Forecast","PartNoRev","String","")
	f.Data.DataTable.AddColumn("Forecast","Rev","String","")
	f.Data.DataTable.AddColumn("Forecast","KeyFigure","String","")
	f.Data.DataTable.AddColumn("Forecast","Locn","String","")
	f.Data.DataTable.AddColumn("Forecast","OrderID","String","")
	f.Data.DataTable.AddColumn("Forecast","ItemID","String","")
	f.Data.DataTable.AddColumn("Forecast","ReqDelivery","Date","01-01-1900")
	
	'Add 35 Periods columns
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.iNumberOfPeriod,1)
		f.Intrinsic.String.Build("Period{0}",v.Local.iCnt,v.Local.sHold)
		f.Data.DataTable.AddColumn("Forecast",v.Local.sHold,"float")
		f.Intrinsic.Control.If(v.Local.iCnt,=,0)
			v.Local.sExpression.Set("IsNull([Period0],0)")
		f.Intrinsic.Control.Else
			f.Intrinsic.String.Build("{0} + IsNull([Period{1}],0)",v.Local.sExpression,v.Local.iCnt,v.Local.sExpression)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.iCnt)

	'Loop the sForecastContent
	f.Intrinsic.Math.Add(v.Local.sForecastContent.UBound,1,v.Local.iHold)
	gui.Form.proBar2.Visible(True)
	gui.Form.proBar2.Max(v.Local.iHold)
	
	f.Intrinsic.Control.For(v.Local.iCnt,2,v.Local.sForecastContent.UBound,1)
	
		'Set indicator
		gui.Form.proBar2.Value(v.Local.iCnt)
		f.Intrinsic.String.Split(v.Local.sForecastContent(v.Local.iCnt),",",v.Local.sLine)
	
		'Check LTA/Non-LTA
		f.Intrinsic.Math.IsNumeric(v.Local.sLine(v.Local.iOrderNo).Trim,v.Local.bNumeric)
		f.Intrinsic.Control.If(v.Local.bNumeric)
			v.Local.sLTAType.Set("NON-LTA")
			v.Local.iOrderID.Set(v.Local.sLine(v.Local.iOrderNo).Trim)
			v.Local.sOrderID.Set(v.Local.iOrderID)
		f.Intrinsic.Control.Else
			V.Local.sLTAType.Set("LTA")
			v.Local.sOrderID.Set(v.Local.sLine(v.Local.iOrderNo).Trim)
		f.Intrinsic.Control.EndIf		
	
		'Use this to know when Part changes from line to line
		f.Intrinsic.Control.If(v.Local.sLine(v.Local.iProduct_No).Trim,=,"")
			v.Local.sCurrentPart.Set(v.Local.sPreviousPart)			
		f.Intrinsic.Control.Else
			v.Local.sCurrentPart.Set(v.Local.sLine(v.Local.iProduct_No))			
			v.Local.sPreviousPart.Set(v.Local.sLine(v.Local.iProduct_No))			
		f.Intrinsic.Control.EndIf
		
		'Use this to know when Location changes from line to line
		f.Intrinsic.Control.If(v.Local.sLine(v.Local.iCust_Loc_No).Trim,=,"")
			v.Local.sCurrentLocn.Set(v.Local.sPreviousLocn)
		f.Intrinsic.Control.Else
			v.Local.sCurrentLocn.Set(v.Local.sLine(v.Local.iCust_Loc_No))
			v.Local.sPreviousLocn.Set(v.Local.sLine(v.Local.iCust_Loc_No))
		f.Intrinsic.Control.EndIf
		
		'Set Date
		v.Local.sDate.Set(v.Local.sLine(v.Local.iReq_Date))
		f.Intrinsic.String.Mid(v.Local.sDate,5,2,v.Local.sMonth)
		f.Intrinsic.String.Build("{0}/{1}/{2}",v.Local.sMonth,v.Local.sDate.right2,v.Local.sDate.left4,v.Local.sDate)
	
		f.Intrinsic.Date.IsDate(v.Local.sDate,v.Local.bDate)
		f.Intrinsic.Control.If(v.Local.bDate)
			v.Local.dReqDeliveryDate.Set(v.Local.sDate)
		f.Intrinsic.Control.Else
			v.Local.dReqDeliveryDate.Set("01/01/1900")
		f.Intrinsic.Control.EndIf	
		
		f.Data.DataTable.AddRow("Forecast","Type",v.Local.sLTAType,"PartNoRev",v.Local.sCurrentPart.Trim,"KeyFigure",v.Local.sLine(v.Local.iKey_Figure).Trim,"Locn",v.Local.sCurrentLocn.Trim,"OrderID",v.Local.sOrderID,"ItemID",v.Local.sLine(v.Local.iItemNo).Trim,"ReqDelivery",v.Local.dReqDeliveryDate)	
		
		'Set Period qty
		f.Intrinsic.Math.Add(v.Local.iPeriod_0,v.Local.iNumberOfPeriod,v.Local.iPeriodUbound)
		f.Intrinsic.Control.For(v.Local.iInner,v.Local.iPeriod_0,v.Local.iPeriodUbound,1)
			f.Intrinsic.Math.Sub(v.Local.iInner,18,v.Local.iPeriod)
			f.Intrinsic.Math.IsNumeric(v.Local.sLine(v.Local.iInner).Trim,v.Local.bNumeric)
			f.Intrinsic.Control.If(v.Local.bNumeric)
				f.Intrinsic.String.Build("Period{0}",v.Local.iPeriod,v.Local.sHold)
				f.Data.DataTable.SetValue("Forecast",v.DataTable.Forecast.RowCount--,v.Local.sHold,v.Local.sLine(v.Local.iInner).Trim)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.iInner)
		
	f.Intrinsic.Control.Next(v.Local.iCnt)	
	
	f.Data.DataTable.AddExpressionColumn("Forecast","TotalPeriod",Float,v.Local.sExpression)
	
	f.Data.DataTable.SetSeries("Forecast","Num",3,1)
	
	gui.Form.proBar2.Max(v.DataTable.Forecast.RowCount)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Forecast.RowCount--,1)
		'Set indicator
		gui.Form.proBar2.Value(v.Local.iCnt)
		f.Intrinsic.Control.If(v.DataTable.Forecast(v.Local.iCnt).KeyFigure!FieldValTrim,=,"Firm")
			v.Local.fTotal.Set(v.DataTable.Forecast(v.Local.iCnt).TotalPeriod!FieldValString)
			v.Local.fCulmulated.Set(0)
		f.Intrinsic.Control.ElseIf(v.DataTable.Forecast(v.Local.iCnt).KeyFigure!FieldValTrim,=,"Planned")	
			v.Local.fCulmulated.Set(0)
		f.Intrinsic.Control.Else
			f.Intrinsic.Math.Add(v.DataTable.Forecast(v.Local.iCnt).TotalPeriod!FieldValString,v.Local.fCulmulated,v.Local.fCulmulated)
			f.Intrinsic.Control.If(v.Local.fCulmulated,<=,v.Local.fTotal)
				f.Data.DataTable.SetValue("Forecast",v.Local.iCnt,"KeyFigure","FirmLine")
			f.Intrinsic.Control.Else
				f.Data.DataTable.SetValue("Forecast",v.Local.iCnt,"KeyFigure","PlannedLine")
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.iCnt)
	gui.Form.proBar2.Visible(False)
	
	f.Data.DataTable.AddExpressionColumn("Forecast","OrderPart","String","[OrderID] + '@' + [PartNoRev]")
	f.Data.Datatable.FillFromDictionary("Forecast","RevDict","OrderPart","Rev")
	f.Data.DataTable.AddExpressionColumn("Forecast","PartNoRev17","String","SubString([PartNoRev] + '                    ',1,17)")
	f.Data.DataTable.AddExpressionColumn("Forecast","Part","String","[PartNoRev17] + [Rev]")
	gui.Form.proBar1.Visible(False)
	
	f.Intrinsic.Control.CallSub("Format_gsForecast")
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Parse_Forecast_File.End

Program.Sub.Format_gsForecast.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.iCnt.Declare
	v.Local.sHold.Declare
	v.Local.sVisibleIndex.Declare
	
	'Add gridview and format
	gui.Form.gsForecast.AddGridviewFromDatatable("gvForecast","Forecast")
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","AllowSort",True)
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","AllowFilter",True)
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","OptionsFindAlwaysVisible",True)
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","EnableAppearanceOddRow",False)
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","OptionsViewShowAutoFilterRow",True)
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","AllowColumnResizing",True)
	Gui.Form.gsForecast.SetGridViewProperty("gvForecast","OptionsViewColumnAutoWidth",False)
	gui.Form.gsForecast.SetGridviewProperty("gvForecast","Showgrouppanel",True)
	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Num","Width","35")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Type","Width","50")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Add","Width","35")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","KeyFigure","Width","60")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Part","Width","130")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Locn","Width","40")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","OrderID","Width","65")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","ItemID","Width","65")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","TotalPeriod","Width","85")
	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","KeyFigure","Visibleindex",3)
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Part","Visibleindex",4)	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Locn","Visibleindex",5)
	gui.Form.gsForecast.SetColumnProperty("gvForecast","TotalPeriod","VisibleIndex",9)
	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","OrderPart","Visible",False)
	gui.Form.gsForecast.SetColumnProperty("gvForecast","PartNoRev","Visible",False)
	gui.Form.gsForecast.SetColumnProperty("gvForecast","PartNoRev17","Visible",False)
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Rev","Visible",False)

'	v.Local.sVisibleIndex.Set("Num,Type,Priority,Part,PartNoRev,PartNoRev17,Rev,Locn,OpenQty,SchLine,OrderID,ItemID,ReqDate,OTDDate,OrderPart")
'	f.Intrinsic.String.Split(v.Local.sVisibleIndex,",",v.Local.sVisibleIndex)
'	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sVisibleIndex.UBound,1)
'		gui.Form.gsForecast.SetColumnProperty("gvForecast","TotalPeriod","VisibleIndex",9)
'	f.Intrinsic.Control.Next(v.Local.iCnt)
	f.Intrinsic.Control.For(v.Local.iCnt,0,35,1)
		f.Intrinsic.String.Build("Period{0}",v.Local.iCnt,v.Local.sHold)
		gui.Form.gsForecast.SetColumnProperty("gvForecast",v.Local.sHold,"HeaderHAlignment","far")
		gui.Form.gsForecast.SetColumnProperty("gvForecast",v.Local.sHold,"Width","45")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Add","CellHAlignment","center")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","Add","HeaderHAlignment","center")

	gui.Form.gsForecast.SetColumnProperty("gvForecast","TotalPeriod","CellHAlignment","far")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","TotalPeriod","HeaderHAlignment","far")
	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","ItemID","CellHAlignment","far")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","ItemID","HeaderHAlignment","far")
	
	gui.Form.gsForecast.SetColumnProperty("gvForecast","TotalPeriod","DisplayCustomNumeric","###,###,###,###")	
	
	gui.Form.gsForecast.AddSummaryItem("gvForecast","TotalPeriod","SumTotalPeriod","Sum","","","n")
	gui.Form.gsForecast.SetColumnProperty("gvForecast","ReqDelivery","DisplayCustomDatetime","d")
	
	gui.Form.gsForecast.AddSummaryItem("gvForecast","Part","Part","Count","Total Row: ","",n0)	
	gui.Form.gsForecast.AddGridGroupSummaryItem("gvForecast","Part","PartGroup","Count","Tt Row: "," ","n0")
	gui.Form.gsForecast.AddGridGroupSummaryItem("gvForecast","TotalPeriod","TotalPeriodGroup","Sum","Tt PeriodQty : "," ","n0")	
	
	gui.Form.gsForecast.MainView("gvForecast")
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Format_gsForecast.End

Program.Sub.Merge_Tables.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.iCnt.Declare
	v.Local.sFilter.Declare
	v.Local.bNumeric.Declare
	v.Local.iItemID.Declare
	v.Local.sReturn.Declare
	v.Local.sHold.Declare
	v.Local.fTotal.Declare
	v.Local.sDateOverdue.Declare
	
	f.Intrinsic.Control.If(v.DataTable.MergedTB.Exists)
		f.Data.DataTable.Close("MergedTB")
	f.Intrinsic.Control.EndIf
	
	'Create MergedTB (for 3rd grid) that has staring records from Commit file (CMT table)
	f.Data.DataView.Create("CMT","CMTDV")
	f.Data.DataView.ToDataTable("CMT","CMTDV","MergedTB",True)
	f.Data.DataTable.AddColumn("MergedTB","NumFromForeCast","String")
	f.Data.DataTable.AddColumn("MergedTB","Add","String")
	f.Data.DataTable.AddColumn("MergedTB","KeyFigure","String")
	f.Data.DataTable.AddColumn("MergedTB","GridNum","Long",0)
	
	'Compare and merge tables
	
	'Create ForeCastNonLTA
	f.Data.DataView.Create("ForeCast","ForeCastDV",22,"Type = 'NON-LTA' and KeyFigure = 'PlannedLine' and Part <> '' and OrderID <> '' and ItemID <> '' and ReqDelivery <> #01/01/1900#","")
	f.Intrinsic.Control.If(v.DataTable.ForeCastNonLTA.Exists)
		f.Data.DataTable.Close("ForeCastNonLTA")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("ForeCast","ForeCastDV","ForeCastNonLTA",True)
	
	'Process Non-LTA:
	f.Intrinsic.Control.If(v.DataTable.ForecastNonLTA.RowCount,>,0)
		gui.Form.proBar3.Visible(True)
		gui.Form.proBar3.Max(v.DataTable.ForecastNonLTA.RowCount)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.ForecastNonLTA.RowCount--,1)

		gui.Form.proBar3.Value(v.Local.iCnt)
		f.Intrinsic.Math.IsNumeric(v.DataTable.ForecastNonLTA(v.Local.iCnt).ItemID!FieldValString,v.Local.bNumeric)
		
		f.Intrinsic.Control.If(v.Local.bNumeric)
			v.Local.iItemID.Set(v.DataTable.ForecastNonLTA(v.Local.iCnt).ItemID!FieldValString)
			
			f.Intrinsic.String.Build("OrderID = '{0}' and ItemID = '{1}' and Locn = '{2}' and Part = '{3}'",v.DataTable.ForeCastNonLTA(v.Local.iCnt).OrderID!FieldValString,v.Local.iItemID,v.DataTable.ForeCastNonLTA(v.Local.iCnt).Locn!FieldValString,v.DataTable.ForeCastNonLTA(v.Local.iCnt).Part!FieldValString,v.Local.sFilter)
			f.Data.DataView.SetFilter("CMT","CMTDV",v.Local.sFilter)
			
			f.Intrinsic.Control.If(v.DataView.CMT!CMTDV.RowCount,=,0)
				'Add Record to MergedTB
				f.Data.DataTable.AddRow("MergedTB","NumFromForeCast",v.DataTable.ForeCastNonLTA(v.Local.iCnt).Num!FieldValString,"Type","NON-LTA","Part",v.DataTable.ForeCastNonLTA(v.Local.iCnt).Part!FieldValString,"OpenQty",v.DataTable.ForeCastNonLTA(v.Local.iCnt).TotalPeriod!FieldValString,"OrderID",v.DataTable.ForeCastNonLTA(v.Local.iCnt).OrderID!FieldValString,"ItemID",v.Local.iItemID,"Locn",v.DataTable.ForeCastNonLTA(v.Local.iCnt).Locn!FieldValString,"ReqDate",v.DataTable.ForeCastNonLTA(v.Local.iCnt).ReqDelivery!FieldValString,"Add","N","KeyFigure",v.DataTable.ForeCastNonLTA(v.Local.iCnt).KeyFigure!FieldValString)
				'Set Color for the ForeCast Source Grid
				f.Intrinsic.String.Build("Num = '{0}'",v.DataTable.ForecastNonLTA(v.Local.iCnt).Num!FieldValString,v.Local.sFilter)
				f.Data.DataTable.Select("Forecast",v.Local.sFilter,v.Local.sReturn)
				f.Intrinsic.Math.IsNumeric(v.Local.sReturn,v.Local.bNumeric)
				f.Intrinsic.Control.If(v.Local.bNumeric)
					f.Data.DataTable.SetValue("ForeCast",v.Local.sReturn,"Add","N")
				f.Intrinsic.Control.EndIf												
			f.Intrinsic.Control.EndIf		
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	gui.Form.proBar3.Visible(False)

	'Create ForeCastLTA
	f.Data.DataView.SetFilter("ForeCast","ForeCastDV","Type = 'LTA' and KeyFigure = 'PlannedLine' and Part <> '' and OrderID <> '' and ItemID <> '' and ReqDelivery <> #01/01/1900#")
	f.Intrinsic.Control.If(v.DataTable.ForeCastLTA.Exists)
		f.Data.DataTable.Close("ForeCastLTA")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("ForeCast","ForeCastDV","ForeCastLTA",True)

	'Merge LTA:
	f.Intrinsic.Control.If(v.DataTable.ForecastLTA.RowCount,>,0)
		gui.Form.proBar4.Visible(True)
		gui.Form.proBar4.Max(v.DataTable.ForecastLTA.RowCount)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.ForecastLTA.RowCount--,1)
		gui.Form.proBar4.Value(v.Local.iCnt)
		F.Intrinsic.String.Split(v.DataTable.ForecastLTA(v.Local.iCnt).ItemID!FieldValString,"/",V.Local.sHold)
		f.Intrinsic.Math.IsNumeric(v.Local.sHold(0).Trim,v.Local.bNumeric)
		f.Intrinsic.Control.If(v.Local.bNumeric)
			v.Local.iItemID.Set(v.Local.sHold(0).Trim)
			f.Intrinsic.String.Build("OrderID = '{0}' and ItemID = '{1}' and Locn = '{2}' and Part = '{3}' and ReqDate = '{4}'",v.DataTable.ForecastLTA(v.Local.iCnt).OrderID!FieldValString,v.Local.iItemID,v.DataTable.ForecastLTA(v.Local.iCnt).Locn!FieldValString,v.DataTable.ForecastLTA(v.Local.iCnt).Part!FieldValString,v.DataTable.ForecastLTA(v.Local.iCnt).ReqDelivery!FieldValString,v.Local.sFilter)
			
			f.Data.DataView.SetFilter("CMT","CMTDV",v.Local.sFilter)
			
			f.Intrinsic.Control.If(v.DataView.CMT!CMTDV.RowCount,=,0)
				'Add Record to MergedTB
				f.Data.DataTable.AddRow("MergedTB","NumFromForeCast",v.DataTable.ForecastLTA(v.Local.iCnt).Num!FieldValString,"Type","LTA","Part",v.DataTable.ForecastLTA(v.Local.iCnt).Part!FieldValString,"OpenQty",v.DataTable.ForecastLTA(v.Local.iCnt).TotalPeriod!FieldValString,"OrderID",v.DataTable.ForecastLTA(v.Local.iCnt).OrderID!FieldValString,"ItemID",v.Local.iItemID,"Locn",v.DataTable.ForecastLTA(v.Local.iCnt).Locn!FieldValString,"ReqDate",v.DataTable.ForecastLTA(v.Local.iCnt).ReqDelivery!FieldValString,"Add","L","KeyFigure",v.DataTable.ForeCastLTA(v.Local.iCnt).KeyFigure!FieldValString)
				'Set Color for the ForeCast Source Grid
				f.Intrinsic.String.Build("Num = '{0}'",v.DataTable.ForecastLTA(v.Local.iCnt).Num!FieldValString,v.Local.sFilter)
				f.Data.DataTable.Select("Forecast",v.Local.sFilter,v.Local.sReturn)
				f.Intrinsic.Math.IsNumeric(v.Local.sReturn,v.Local.bNumeric)
				f.Intrinsic.Control.If(v.Local.bNumeric)
					f.Data.DataTable.SetValue("ForeCast",v.Local.sReturn,"Add","L")
				f.Intrinsic.Control.EndIf
				
			f.Intrinsic.Control.EndIf		
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	gui.Form.proBar4.Visible(False)	
	
	'Set Series for Sorting the original rows added
	f.Data.DataTable.SetSeries("MergedTB","GridNum",1,1)
	
	f.Intrinsic.Control.CallSub("Format_gsMerged")
	
	'UploadTB: This table will be from MergedTB that combine the OVERDUE line into 1 line
	f.Data.DataView.Create("MergedTB","MergedDV",22,"IsNull(Priority,'') <> 'OVERDUE'","")
	f.Intrinsic.Control.If(v.DataTable.UploadTB.Exists)
		f.Data.DataTable.Close("UploadTB")
	f.Intrinsic.Control.EndIf
	
	F.Data.DataView.ToDataTable("MergedTB","MergedDV","UploadTB",True)
	f.Data.DataView.SetFilter("MergedTB","MergedDV","Priority = 'OVERDUE'")
	f.Intrinsic.Control.If(v.DataTable.DistinctOverdue.Exists)
		f.Data.DataTable.Close("DistinctOverdue")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("MergedTB","MergedDV","DistinctOverdue","Type*!*Part*!*OrderID*!*ItemID*!*Locn",True)
	f.Intrinsic.Control.If(v.DataTable.DistinctOverdue.RowCount,>,0)
		gui.Form.proBar6.Max(v.DataTable.DistinctOverdue.RowCount)
		gui.Form.proBar6.Visible(True)
	f.Intrinsic.Control.EndIf
	
	'Looping to combine OVERDUE lines
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.DistinctOverdue.RowCount--,1)
	
		gui.Form.proBar6.Value(v.Local.iCnt)
		f.Intrinsic.String.Build("Priority = 'OVERDUE' and Part = '{0}' and OrderID = '{1}' and ItemID = '{2}' and Locn = '{3}' and Type = '{4}'",v.DataTable.DistinctOverdue(v.Local.iCnt).Part!FieldValString,v.DataTable.DistinctOverdue(v.Local.iCnt).OrderID!FieldValString,v.DataTable.DistinctOverdue(v.Local.iCnt).ItemID!FieldValString,v.DataTable.DistinctOverdue(v.Local.iCnt).Locn!FieldValString,v.DataTable.DistinctOverdue(v.Local.iCnt).Type!FieldValString,v.Local.sFilter)
		f.Data.DataTable.Compute("MergedTB","Sum([OpenQty])",v.Local.sFilter,v.Local.sReturn)
		f.Intrinsic.Math.IsNumeric(v.Local.sReturn,v.Local.bNumeric)
		f.Intrinsic.Control.If(v.Local.bNumeric)
			v.Local.fTotal.Set(v.Local.sReturn)
			f.Data.DataView.SetFilter("MergedTB","MergedDV",v.Local.sFilter)
			f.Data.DataView.SetSort("MergedTB","MergedDV","ReqDate Asc")
			v.Local.sDateOverdue.Set(v.DataView.MergedTB!MergedDV(0).ReqDate!FieldValString)
			f.Data.DataTable.AddRow("UploadTB","Num",v.DataView.MergedTB!MergedDV(0).Num!FieldValString,"Type",v.DataView.MergedTB!MergedDV(0).Type!FieldValString,"Priority","OVERDUE","Part",v.DataView.MergedTB!MergedDV(0).Part!FieldValString,"OpenQty",v.Local.fTotal,"OrderID",v.DataView.MergedTB!MergedDV(0).OrderID!FieldValString,"ItemID",v.DataView.MergedTB!MergedDV(0).ItemID!FieldValString,"Locn",v.DataView.MergedTB!MergedDV(0).Locn!FieldValString,"ReqDate",v.Local.sDateOverdue)
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	gui.Form.proBar6.Visible(False)
	
	f.Data.DataTable.AddColumn("UploadTB","FileHeader","Long",v.Args.sCommitFileHeader)
	
	'Set series gridNum
	f.Data.DataTable.SetSeries("UpLoadTB","GridNum",1,1)	
	
	f.Intrinsic.Control.CallSub("Format_gsUpload")
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Merge_Tables.End

Program.Sub.Format_gsMerged.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	gui.Form.gsMerged.AddGridviewFromDatatable("gvMerged","MergedTB")

	gui.Form.gsForecast.AddStyleFormatCondition("gvForecast","Add","tagForeCastLTAadded","equal","L")
	gui.Form.gsForecast.SetStyleFormatConditionProperty("gvForecast","Add","tagForeCastLTAadded","backcolor","Lightblue")
	
	gui.Form.gsForecast.AddStyleFormatCondition("gvForecast","Add","tagForeCastNonLTAadded","equal","N")
	gui.Form.gsForecast.SetStyleFormatConditionProperty("gvForecast","Add","tagForeCastNonLTAadded","backcolor","LightGreen")
	
	gui.Form.gsMerged.AddStyleFormatCondition("gvMerged","Add","tagMergedLTAadded","equal","L")
	gui.Form.gsMerged.SetStyleFormatConditionProperty("gvMerged","Add","tagMergedLTAadded","backcolor","Lightblue")
	
	gui.Form.gsMerged.AddStyleFormatCondition("gvMerged","Add","tagMergedNONLTAadded","equal","N")
	gui.Form.gsMerged.SetStyleFormatConditionProperty("gvMerged","Add","tagMergedNONLTAadded","backcolor","LightGreen")	
	
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","AllowSort",True)
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","AllowFilter",True)
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","OptionsFindAlwaysVisible",True)
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","EnableAppearanceOddRow",False)
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","OptionsViewShowAutoFilterRow",True)
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","AllowColumnResizing",True)
	Gui.Form.gsMerged.SetGridViewProperty("gvMerged","OptionsViewColumnAutoWidth",False)
	gui.Form.gsMerged.SetGridviewProperty("gvMerged","Showgrouppanel",True)
	
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Part","VisibleIndex",3)
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Locn","VisibleIndex",4)
	
	gui.Form.gsMerged.SetColumnProperty("gvMerged","OrderPart","Visible",False)
	gui.Form.gsMerged.SetColumnProperty("gvMerged","PartNoRev","Visible",False)
	gui.Form.gsMerged.SetColumnProperty("gvMerged","PartNoRev17","Visible",False)
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Rev","Visible",False)	
	
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Num","Width","35")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Type","Width","50")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Priority","Width","45")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Part","Width","80")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","OpenQty","Width","85")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","ItemID","Width","45")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","SchLine","Width","35")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","Locn","Width","40")
	
	gui.Form.gsMerged.SetColumnProperty("gvMerged","OpenQty","CellHAlignment","far")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","OpenQty","HeaderHAlignment","far")
	
	gui.Form.gsMerged.SetColumnProperty("gvMerged","ItemID","CellHAlignment","far")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","ItemID","HeaderHAlignment","far")
	
	gui.Form.gsMerged.SetColumnProperty("gvMerged","OpenQty","DisplayCustomNumeric","###,###,###,###")	

	gui.Form.gsMerged.AddSummaryItem("gvMerged","OpenQty","SumMergedOpenQty","Sum","","","n")
	gui.Form.gsMerged.SetColumnProperty("gvMerged","ReqDate","DisplayCustomDatetime","d")
	
	gui.Form.gsMerged.AddSummaryItem("gvMerged","Part","Part","Count","Total Row: ","",n0)	
	gui.Form.gsMerged.AddGridGroupSummaryItem("gvMerged","Part","PartGroup","Count","Tt Row: "," ","n0")
	gui.Form.gsMerged.AddGridGroupSummaryItem("gvMerged","OpenQty","OpenQtyGroup","Sum","Tt OpenQty : "," ","n0")
	
	gui.Form.gsMerged.MainView("gvMerged")
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Format_gsMerged.End

Program.Sub.Format_gsUpload.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	gui.Form.gsUpload.AddGridviewFromDatatable("gvUpload","UploadTB")
	
	gui.Form.gsUpload.AddStyleFormatCondition("gvUpload","Add","tagUploadForeCastLTAadded","equal","L")
	gui.Form.gsUpload.SetStyleFormatConditionProperty("gvUpload","Add","tagUploadForeCastLTAadded","backcolor","Lightblue")
	
	gui.Form.gsUpload.AddStyleFormatCondition("gvUpload","Add","tagUploadForeCastNonLTAadded","equal","N")
	gui.Form.gsUpload.SetStyleFormatConditionProperty("gvUpload","Add","tagUploadForeCastNonLTAadded","backcolor","Green")
		
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","AllowSort",True)
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","AllowFilter",True)
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","OptionsFindAlwaysVisible",True)
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","EnableAppearanceOddRow",False)
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","OptionsViewShowAutoFilterRow",True)
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","AllowColumnResizing",True)
	Gui.Form.gsUpload.SetGridViewProperty("gvUpload","OptionsViewColumnAutoWidth",False)
	gui.Form.gsUpload.SetGridviewProperty("gvUpload","Showgrouppanel",True)
	
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Part","VisibleIndex",3)
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Locn","VisibleIndex",4)
	
	gui.Form.gsUpload.SetColumnProperty("gvUpload","OrderPart","Visible",False)
	gui.Form.gsUpload.SetColumnProperty("gvUpload","PartNoRev","Visible",False)
	gui.Form.gsUpload.SetColumnProperty("gvUpload","PartNoRev17","Visible",False)
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Rev","Visible",False)	

	gui.Form.gsUpload.SetColumnProperty("gvUpload","Num","Width","45")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Type","Width","55")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Priority","Width","65")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Part","Width","100")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","OpenQty","Width","85")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","ItemID","Width","45")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","SchLine","Width","35")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","Locn","Width","40")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","FileHeader","Width","50")
	
	gui.Form.gsUpload.SetColumnProperty("gvUpload","GridNum","Caption","UploadGridNum")
	
	gui.Form.gsUpload.SetColumnProperty("gvUpload","OpenQty","CellHAlignment","far")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","OpenQty","HeaderHAlignment","far")
	
	gui.Form.gsUpload.SetColumnProperty("gvUpload","ItemID","CellHAlignment","far")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","ItemID","HeaderHAlignment","far")
	
	gui.Form.gsUpload.SetColumnProperty("gvUpload","OpenQty","DisplayCustomNumeric","###,###,###,###")	

	gui.Form.gsUpload.AddSummaryItem("gvUpload","OpenQty","SumUploadOpenQty","Sum","","","n")
	gui.Form.gsUpload.SetColumnProperty("gvUpload","ReqDate","DisplayCustomDatetime","d")
	
	gui.Form.gsUpload.AddSummaryItem("gvUpload","Part","Part","Count","Total Rows: ","",n0)	
	gui.Form.gsUpload.AddGridGroupSummaryItem("gvUpload","Part","PartGroup","Count","Tt Row: "," ","n0")
	gui.Form.gsUpload.AddGridGroupSummaryItem("gvUpload","OpenQty","OpenQtyGroup","Sum","Tt OpenQty : "," ","n0")
	
	gui.Form.gsUpload.MainView("gvUpload")	


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Format_gsUpload.End

Program.Sub.cmdCreateEA850_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.iCnt.Declare
	v.Local.sContent.Declare
	v.Local.sHold.Declare
	v.Local.sLine.Declare
	v.Local.iInner.Declare
	v.Local.sFilter.Declare
	v.Local.fhold.Declare
	v.Local.dDate.Declare
	v.Local.sFile.Declare
	v.Local.iLineNumber.Declare
	v.Local.sItemID.Declare
	v.Local.sPONum.Declare
	v.Local.iItemID.Declare
	v.Local.dPromiseDate.Declare
	v.Local.sYear.Declare
	v.Local.sMonth.Declare
	v.Local.sDay.Declare
	v.Local.sTotal.Declare
	v.Local.iHold.Declare
	v.Local.bDate.Declare
	
	f.Intrinsic.Control.If(v.Global.bCreateEA850)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bCreateEA850.Set(True)
	
	f.Intrinsic.Control.If(v.DataTable.UploadTB.Exists,=,False)		
		f.Intrinsic.UI.Msgbox("Unload grid is empty","Attention")
		v.Global.bCreateEA850.Set(False)
		f.Intrinsic.Control.ExitSub	
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.UploadTB.RowCount,<=,0)
		f.Intrinsic.UI.Msgbox("Unload grid is empty","Attention")
		v.Global.bCreateEA850.Set(False)
		f.Intrinsic.Control.ExitSub			
	f.Intrinsic.Control.EndIf
	
	gui.Progress..Show
	'Split in 2 type LTA and NON-LTA, order by OrderID,ItemID,ReqDate
	f.Intrinsic.Control.If(v.DataView.UploadTB!UploadDV.Exists)
		f.Data.DataView.Close("UploadTB","UploadDV")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.Create("UploadTB","UploadDV",22,"Type = 'NON-LTA'","OrderID asc,ItemID asc,ReqDate asc")
	
	'1/Non LTA
	F.Intrinsic.Control.If(V.DataTable.NONLTA.Exists)
		f.Data.Datatable.Close("NONLTA")
	F.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("UploadTB","UploadDV","NONLTA",True)
	
	'Get Distinct OrderID and push to Table Distinct ORDERID
	f.Data.DataView.Create("NONLTA","NONLTADV")
	f.Intrinsic.Control.If(v.DataTable.DistinctNONLTAOrd.Exists)
		f.Data.DataTable.Close("DistinctNONLTAOrd")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("NONLTA","NONLTADV","DistinctNONLTAOrd","OrderID*!*Locn",True)	
	
	gui.Progress.lblProcess.Caption("Processing NON LTA orders...")
	f.Intrinsic.Control.If(v.DataTable.DistinctNONLTAOrd.RowCount,>,0)
		gui.Progress.ProMain.Max(v.DataTable.DistinctNONLTAOrd.RowCount)
	f.Intrinsic.Control.EndIf
	
	v.Local.sContent.Set("#StartingPoint#")	
	'Loop through table DistinctNONLTAOrd, Distinct ORDERID, each one, filter the Source table order by itemID, ReqDate => add records to EA850	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.DistinctNONLTAOrd.RowCount--,1)

		gui.Progress.ProMain.Value(v.Local.iCnt)
		'Create Header H Line:
		'Buyer ID
		F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sLine)
		'PO-Number
		F.Intrinsic.String.RPad(v.DataTable.DistinctNONLTAOrd(v.Local.iCnt).OrderID!FieldValString," ",15,V.Local.sHold)
		f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
		'Line number is 000
		f.Intrinsic.String.Build("{0}000",v.Local.sLine,v.Local.sHold,v.Local.sLine)
		
		'850-H-SHIP-TO-CODE
		f.Intrinsic.String.RPad(v.Local.sLine," ",70,v.Local.sLine)
		f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,"    ",v.Local.sLine)
		
		'H-Tranasction = 830
		f.Intrinsic.String.RPad(v.Local.sLine," ",139,v.Local.sLine)
		f.Intrinsic.String.Build("{0}830",v.Local.sLine,v.Local.sLine)
		'850-H-TRADING-PARTNER-CD = UTA
		f.Intrinsic.String.Build("{0}UTA",v.Local.sLine,v.Local.sLine)
		'850-H-Record-Type
		f.Intrinsic.String.RPad(v.Local.sLine," ",510,v.Local.sLine)
		f.Intrinsic.String.Build("{0}H",v.Local.sLine,v.Local.sLine)
		'H-Conversion-flag
		f.Intrinsic.String.Build("{0} ",v.Local.sLine,v.Local.sLine)
		
		'add header line to content
		f.Intrinsic.String.Build("{0}{1}{2}",v.Local.sContent,v.Ambient.NewLine,v.Local.sLine,v.Local.sContent)

		'Create Line records
		f.Intrinsic.String.Build("OrderID = '{0}'",v.DataTable.DistinctNONLTAOrd(v.Local.iCnt).OrderID!FieldValString,v.Local.sFilter)
		f.Data.DataView.SetFilter("NONLTA","NONLTADV",v.Local.sFilter)
		f.Data.DataView.SetSort("NONLTA","NONLTADV","OrderID asc,ItemID asc,ReqDate asc")
		f.Intrinsic.Control.If(v.DataView.NONLTA!NONLTADV.RowCount,>,0)
			gui.Progress.proSub.Max(v.DataView.NONLTA!NONLTADV.RowCount)
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.For(v.Local.iInner,0,v.DataView.NONLTA!NONLTADV.RowCount--,1)

			gui.Progress.proSub.Value(v.Local.iInner)
			'Buyer ID
			F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sLine)
			'PO-Number
			F.Intrinsic.String.RPad(v.DataTable.DistinctNONLTAOrd(v.Local.iCnt).OrderID!FieldValString," ",15,V.Local.sHold)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			'Line-Number
			f.Intrinsic.Math.Add(v.Local.iInner,1,v.Local.iLineNumber)
			f.Intrinsic.String.LPad(v.Local.iLineNumber,"0",3,v.Local.sHold)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			'Buyer Part number
			f.Intrinsic.String.RPad(v.Local.sLine," ",54,v.Local.sLine)
			f.Intrinsic.String.RPad(v.DataView.NONLTA!NONLTADV(v.Local.iInner).Part!FieldValString," ",20,v.Local.sHold)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			'Order Qty
			f.Intrinsic.String.Format(v.DataView.NONLTA!NONLTADV(v.Local.iInner).OpenQty!FieldValString,"#######0.0000",v.Local.sHold)
			f.Intrinsic.String.Replace(v.Local.sHold,".","",v.Local.sHold)
			f.Intrinsic.String.lPad(v.Local.sHold,"0",12,v.Local.sHold)
			f.Intrinsic.String.RPad(v.Local.sLine," ",76,v.Local.sLine)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			
			'850-L-PO-LINE-NUM-
			f.Intrinsic.String.RPad(v.Local.sLine," ",225,v.Local.sLine)			
			f.Intrinsic.String.Left(v.DataView.NONLTA!NONLTADV(v.Local.iInner).ItemID!FieldValTrim,3,v.Local.sHold)
			f.Intrinsic.Control.If(v.Local.sHold.Right1,=,"0")
				f.Intrinsic.Math.Div(v.Local.sHold,10,v.Local.iHold)
			f.Intrinsic.Control.Else
				v.Local.iHold.Set(v.Local.sHold)				
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.String.LPad(v.Local.iHold,"0",3,v.Local.sHold)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)			
			
			'Order Type Firm/planned
			f.Intrinsic.String.RPad(v.Local.sLine," ",274,v.Local.sLine)
			'f.Intrinsic.Control.If(v.DataView.NONLTA!NONLTADV(v.Local.iInner).KeyFigure!FieldValTrim,=,"PlannedLine")
			'	v.Local.sHold.Set("P")
			'f.Intrinsic.Control.Else
			'	v.Local.sHold.Set("F")
			'f.Intrinsic.Control.EndIf
			v.Local.sHold.Set("F")
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			
			'User 1
			f.Intrinsic.String.RPad(v.Local.sLine," ",354,v.Local.sLine)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.DataView.NONLTA!NONLTADV(v.Local.iInner).ItemID!FieldValString,v.Local.sLine)	
			
			'User 2
			f.Intrinsic.String.RPad(v.Local.sLine," ",384,v.Local.sLine)
			f.Intrinsic.Control.If(v.DataView.NONLTA!NONLTADV(v.Local.iInner).Priority!FieldValTrim,<>,"")
				v.Local.sHold.Set(v.DataView.NONLTA!NONLTADV(v.Local.iInner).Priority!FieldValTrim)		
			f.Intrinsic.Control.Elseif(v.DataView.NONLTA!NONLTADV(v.Local.iInner).KeyFigure!FieldValTrim,=,"FirmLine")
				v.Local.sHold.Set("Firm")
			f.Intrinsic.Control.ElseIf(v.DataView.NONLTA!NONLTADV(v.Local.iInner).KeyFigure!FieldValTrim,=,"PlannedLine")
				v.Local.sHold.Set("Planned")
			f.Intrinsic.Control.ElseIf(v.DataView.NONLTA!NONLTADV(v.Local.iInner).Priority!FieldValTrim,=,"")
				v.Local.sHold.Set("Firm")
			f.Intrinsic.Control.Else
				v.Local.sHold.Set("")
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)				
			
			'ItemPromiseDate
			f.Intrinsic.String.RPad(v.Local.sLine," ",474,v.Local.sLine)
			v.Local.dDate.Set(v.DataView.NONLTA!NONLTADV(v.Local.iInner).ReqDate!FieldValString)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.dDate.FormatYYYYMMDD,v.Local.sLine)	
		
			'Record Type and conversion
			f.Intrinsic.String.RPad(v.Local.sLine," ",510,v.Local.sLine)
			f.Intrinsic.String.Build("{0}1 ",v.Local.sLine,v.Local.sLine)		
	
			f.Intrinsic.String.Build("{0}{1}{2}",v.Local.sContent,v.Ambient.NewLine,v.Local.sLine,v.Local.sContent)	
		f.Intrinsic.Control.Next(v.Local.iInner)
		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	f.Intrinsic.String.Build("#StartingPoint#{0}",v.Ambient.NewLine,v.Local.sHold)
	f.Intrinsic.String.Replace(v.Local.sContent,v.Local.sHold,"",v.Local.sContent)	
	
	gui.Progress.lblProcess.Caption("Processing LTA...")
	'2/LTA
	f.Data.DataView.SetFilter("UploadTB","UploadDV","Type = 'LTA'")
	f.Data.DataView.SetSort("UploadTB","UploadDV","OrderID asc,ItemID asc,ReqDate asc")
	F.Intrinsic.Control.If(V.DataTable.LTA.Exists)
		f.Data.Datatable.Close("LTA")
	F.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("UploadTB","UploadDV","LTA",True)
	
	'Get Distinct OrderID and push to Table Distinct ORDERID
	f.Data.DataView.Create("LTA","LTADV")
	f.Intrinsic.Control.If(v.DataTable.DistinctLTAOrd.Exists)
		f.Data.DataTable.Close("DistinctLTAOrd")
	f.Intrinsic.Control.EndIf
	'Per Jamie and Pat request on May 2020: distinct Part*!*OrderID*!*ItemID*!*Locn*!*ReqDate
	f.Data.DataView.ToDataTableDistinct("LTA","LTADV","DistinctLTAOrd","OrderID*!*ItemID*!*Locn",True)	
	
	f.Intrinsic.Control.If(v.DataTable.DistinctLTAOrd.RowCount,>,0)
		gui.Progress.ProMain.Max(v.DataTable.DistinctLTAOrd.RowCount)
	f.Intrinsic.Control.EndIf
	
	'Loop through table DistinctLTAOrd, Distinct ORDERID, each one, filter the Source table order by itemID, ReqDate => add records to EA850	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.DistinctLTAOrd.RowCount--,1)

		gui.Progress.ProMain.Value(v.Local.iCnt)
		'Create Header H Line:
		'Buyer ID
		F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sLine)
		'PO-Number
		v.Local.iItemID.Set(v.DataTable.DistinctLTAOrd(v.Local.iCnt).ItemID!FieldValString)
		f.Intrinsic.String.Build("{0}/{1}",v.DataTable.DistinctLTAOrd(v.Local.iCnt).OrderID!FieldValString,v.Local.iItemID,V.Local.sHold)
		F.Intrinsic.String.RPad(v.Local.sHold," ",15,V.Local.sPONum)
		f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sPONum,v.Local.sLine)		
		'Line number is 000
		f.Intrinsic.String.Build("{0}000",v.Local.sLine,v.Local.sHold,v.Local.sLine)
	
		'850-H-SHIP-TO-CODE
		f.Intrinsic.String.RPad(v.Local.sLine," ",70,v.Local.sLine)
		f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,"    ",v.Local.sLine)	
	
		'850-H-CHANGE-BY-DATE-YN
		f.Intrinsic.String.RPad(v.Local.sLine," ",95,v.Local.sLine)
		f.Intrinsic.String.Build("{0}Y",v.Local.sLine,v.Local.sLine)

		'H-Tranasction = 830
		f.Intrinsic.String.RPad(v.Local.sLine," ",139,v.Local.sLine)
		f.Intrinsic.String.Build("{0}830",v.Local.sLine,v.Local.sLine)
		'850-H-TRADING-PARTNER-CD = UTA
		f.Intrinsic.String.Build("{0}UTA",v.Local.sLine,v.Local.sLine)
		'850-H-Record-Type
		f.Intrinsic.String.RPad(v.Local.sLine," ",510,v.Local.sLine)
		f.Intrinsic.String.Build("{0}H",v.Local.sLine,v.Local.sLine)
		'H-Conversion-flag
		f.Intrinsic.String.Build("{0} ",v.Local.sLine,v.Local.sLine)
		
		'add header line to content
		f.Intrinsic.String.Build("{0}{1}{2}",v.Local.sContent,v.Ambient.NewLine,v.Local.sLine,v.Local.sContent)

		'Create order lines
		'Get distinct "Part*!*OrderID*!*ItemID*!*Locn*!*ReqDate",
		f.Intrinsic.Control.If(v.DataView.LTA!v1.Exists)
			F.Data.DataView.Close("LTA","V1")
		f.Intrinsic.Control.EndIf
		f.Data.DataView.Create("LTA","v1")		
		f.Intrinsic.String.Build("OrderID = '{0}' and ItemID = '{1}' and Locn = '{2}'",v.DataTable.DistinctLTAOrd(v.Local.iCnt).OrderID!FieldValString,v.DataTable.DistinctLTAOrd(v.Local.iCnt).ItemID!FieldValString,v.DataTable.DistinctLTAOrd(v.Local.iCnt).Locn!FieldValString,v.Local.sFilter)
		f.Data.DataView.SetFilter("LTA","v1",v.Local.sFilter)
		
		f.Intrinsic.Control.If(v.DataTable.d1.Exists)
			f.Data.DataTable.Close("d1")
		f.Intrinsic.Control.EndIf		
		f.Data.DataView.ToDataTableDistinct("LTA","v1","d1","Part*!*OrderID*!*ItemID*!*Locn*!*ReqDate",True)	

		f.Intrinsic.Control.For(v.Local.iInner,0,v.DataTable.d1.RowCount--,1)	

			'Create Line records
			v.Local.sHold.Set(v.DataTable.d1(v.Local.iInner).ReqDate!FieldValString)
			f.Intrinsic.Date.IsDate(v.Local.sHold.Trim,v.Local.bDate)
			f.Intrinsic.Control.If(v.Local.bDate)
				v.Local.dPromiseDate.Set(v.Local.sHold.Trim)
				v.Local.sHold.Set(v.Local.dPromiseDate.FormatYYYYMMDD)
				v.Local.sYear.Set(v.Local.sHold.left4)
				f.Intrinsic.String.Mid(v.Local.sHold,5,2,v.Local.sMonth)
				v.Local.sDay.Set(v.Local.sHold.Right2)
				f.Intrinsic.String.Build("{0}/{1}/{2}",v.Local.sMonth,v.Local.sDay,v.Local.sYear,v.Local.sHold)			
				f.Intrinsic.String.Build("Part = '{0}' and OrderID = '{1}' and ItemID = '{2}' and Locn = '{3}' and ReqDate = #{4}#",v.DataTable.d1(v.Local.iInner).Part!FieldValString,v.DataTable.d1(v.Local.iInner).OrderID!FieldValString,v.DataTable.d1(v.Local.iInner).ItemID!FieldValString,v.DataTable.d1(v.Local.iInner).Locn!FieldValString,v.Local.sHold,v.Local.sFilter)
			f.Intrinsic.Control.Else
				v.Local.sHold.Set("")
				f.Intrinsic.String.Build("Part = '{0}' and OrderID = '{1}' and ItemID = '{2}' and Locn = '{3}' and ReqDate Is Null",v.DataTable.d1(v.Local.iInner).Part!FieldValString,v.DataTable.d1(v.Local.iInner).OrderID!FieldValString,v.DataTable.d1(v.Local.iInner).ItemID!FieldValString,v.DataTable.d1(v.Local.iInner).Locn!FieldValString,v.Local.sFilter)
			f.Intrinsic.Control.EndIf			
			
			f.Data.DataView.SetFilter("LTA","LTADV",v.Local.sFilter)
			f.Data.DataView.SetSort("LTA","LTADV","OrderID asc,ItemID asc,ReqDate asc")				

			f.Intrinsic.Control.If(v.DataView.LTA!LTADV.RowCount,>,0)
				gui.Progress.proSub.Max(v.DataView.LTA!LTADV.RowCount)			
			f.Intrinsic.Control.EndIf
		
			'gui.Progress.proSub.Value(v.Local.iInner)
			'Buyer ID
			F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sLine)
			'PO-Number
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sPONum,v.Local.sLine)	

			'Line-Number
			f.Intrinsic.Math.Add(v.Local.iInner,1,v.Local.iLineNumber)
			f.Intrinsic.String.LPad(v.Local.iLineNumber,"0",3,v.Local.sHold)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			'Buyer Part number
			f.Intrinsic.String.RPad(v.Local.sLine," ",54,v.Local.sLine)
			f.Intrinsic.String.RPad(v.DataView.LTA!LTADV(0).Part!FieldValString," ",20,v.Local.sHold)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
			'Order Qty
			''''''''''''''''''''''''CALCULATE SUM!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			F.Data.DataTable.Compute("LTA","Sum([OpenQty])",v.Local.sFilter,v.Local.sTotal)
			f.Intrinsic.String.Format(v.Local.sTotal,"#######0.0000",v.Local.sHold)
			'f.Intrinsic.String.Format(v.DataView.LTA!LTADV(0).OpenQty!FieldValString,"#######0.0000",v.Local.sHold)
			f.Intrinsic.String.Replace(v.Local.sHold,".","",v.Local.sHold)
			f.Intrinsic.String.lPad(v.Local.sHold,"0",12,v.Local.sHold)
			f.Intrinsic.String.RPad(v.Local.sLine," ",76,v.Local.sLine)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)
				
			'850-L-PO-LINE-NUM
			f.Intrinsic.String.RPad(v.Local.sLine," ",225,v.Local.sLine)			
			f.Intrinsic.Math.Div(v.DataView.LTA!LTADV(0).ItemID!FieldValString,10,v.Local.sItemID)
			f.Intrinsic.String.LPad(v.Local.sItemID,"0",3,v.Local.sItemID)
			'No longer needed for LTA per Jamie
			'f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sItemID,v.Local.sLine)			
			
			'Order Type Firm/planned
			f.Intrinsic.String.RPad(v.Local.sLine," ",274,v.Local.sLine)
			f.Intrinsic.Control.If(v.DataView.LTA!LTADV(0).KeyFigure!FieldValTrim,=,"PlannedLine")
				v.Local.sHold.Set("P")
			f.Intrinsic.Control.Else
				v.Local.sHold.Set("F")
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,"F",v.Local.sLine)
			
			'User 1
			f.Intrinsic.String.RPad(v.Local.sLine," ",354,v.Local.sLine)
			'No longer needed for LTA per Jamie
			'f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.DataView.LTA!LTADV(0).ItemID!FieldValString,v.Local.sLine)	
			
			'User 2
			f.Intrinsic.String.RPad(v.Local.sLine," ",384,v.Local.sLine)
			f.Intrinsic.Control.If(v.DataView.LTA!LTADV(0).Priority!FieldValTrim,<>,"")
				v.Local.sHold.Set(v.DataView.LTA!LTADV(0).Priority!FieldValTrim)		
			f.Intrinsic.Control.Elseif(v.DataView.LTA!LTADV(0).KeyFigure!FieldValTrim,=,"FirmLine")
				v.Local.sHold.Set("Firm")
			f.Intrinsic.Control.ElseIf(v.DataView.LTA!LTADV(0).KeyFigure!FieldValTrim,=,"PlannedLine")
				v.Local.sHold.Set("Planned")
			f.Intrinsic.Control.ElseIf(v.DataView.LTA!LTADV(0).Priority!FieldValTrim,=,"")
				v.Local.sHold.Set("Firm")
			f.Intrinsic.Control.Else
				v.Local.sHold.Set("")
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sHold,v.Local.sLine)				
			
			'ItemPromiseDate
			f.Intrinsic.String.RPad(v.Local.sLine," ",474,v.Local.sLine)
			v.Local.dDate.Set(v.DataView.LTA!LTADV(0).ReqDate!FieldValString)
			f.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.dDate.FormatYYYYMMDD,v.Local.sLine)	
		
			'Record Type and conversion
			f.Intrinsic.String.RPad(v.Local.sLine," ",510,v.Local.sLine)
			f.Intrinsic.String.Build("{0}1 ",v.Local.sLine,v.Local.sLine)					
	
			'add line to content
			f.Intrinsic.String.Build("{0}{1}{2}",v.Local.sContent,v.Ambient.NewLine,v.Local.sLine,v.Local.sContent)	
		f.Intrinsic.Control.Next(v.Local.iInner)
		
	f.Intrinsic.Control.Next(v.Local.iCnt)	
	
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\EA850_{2}_{3}.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Ambient.Date.FormatYYYYMMDD,v.Ambient.Now.FormatHHNNSS,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sfile,v.Local.sContent)
	gui.Progress..Visible(False)
	f.Intrinsic.String.Build("Created file {0}",v.Local.sFile,v.Local.sHold)
	f.Intrinsic.UI.Msgbox(v.Local.sHold)
	v.Global.bCreateEA850.Set(False)
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.iCnt,"ICNT")
    F.Intrinsic.UI.Msgbox(V.Local.iInner,"INNER")
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdCreateEA850_Click.End

Program.Sub.cmdExport_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)

	F.Intrinsic.Control.If(V.Local.bExcel)
		'Commit
		F.Intrinsic.String.Build("{0}\Commit_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsCommit.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
		'Forecast
		F.Intrinsic.String.Build("{0}\Forecast_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsForecast.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf		
		'MergedTB
		F.Intrinsic.String.Build("{0}\Merged_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsMerged.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
'		'UploadTB
		F.Intrinsic.String.Build("{0}\Upload_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsUpload.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf	
		
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\Commit_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsCommit.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		
		F.Intrinsic.String.Build("{0}\Forecast_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsForecast.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		
		F.Intrinsic.String.Build("{0}\Merged_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsMerged.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		
		F.Intrinsic.String.Build("{0}\Upload_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsUpload.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)		
	F.Intrinsic.Control.EndIf
	
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.Progress_UnLoad.Start
gui.Progress..Visible(False)
Program.Sub.Progress_UnLoad.End
Program.Sub.cmdBrowseCustomer_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sRet.Declare
	
	f.Intrinsic.UI.SetBrowserHotTypeAhead(True)
	f.Intrinsic.UI.Browser("Select Customer","conx","select c.Customer,ID as Ref, Name_Customer as Name, Address1, Address2, City, State, Zip, country from v_customer_master c left join v_cust_xref x on c.Customer = x.customer","Customer*!*Ref*!*Name*!*Address 1*!*Address 2*!*City*!*State*!*Zip*!*Country","200*!*200*!*500*!*500*!*500*!*200*!*200*!*200*!*200","15000","10000",v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet.IsCancel,=,False)
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.Compare.txtCust.Text(v.Local.sRet(0).Trim)
		gui.Compare.txtCustRef.Text(v.Local.sRet(1).Trim)
	f.Intrinsic.Control.EndIf	
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseCustomer_Click.End
Program.Sub.Compare_UnLoad.Start
gui.Compare..Visible(False)
Program.Sub.Compare_UnLoad.End
Program.Sub.cmdCompareFiles_Click.Start
'FileHeader@!@FileHeader*!*Num@!@Num*!*Type@!@Type*!*Priority@!@Priority*!*Part@!@Part*!*OpenQty@!@OpenQty*!*OrderID@!@OrderID*!*ItemID@!@ItemID*!*Locn@!@Locn*!*ReqDate@!@ReqDate*!*NumFromForecast@!@NumFromForecast*!*Add@!@Add*!*KeyFigure@!@KeyFigure*!*UploadGridNum@!@UploadGridNum
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare
	v.Local.sCompareCache.Declare
	v.Local.sDistinctUploadGridNum.Declare
	v.Local.sDistinctSOLineLTAMatched.Declare
	V.Local.sDistinctNONLTACustomerPOInFile.Declare
	v.Local.sDistinctLTACustomerPOInFile.Declare
	
	v.Local.sMatchedLTANum.Declare
	v.Local.sAddedLTANum.Declare
	
	V.Local.sMatchedNONLTANum.Declare
	v.Local.sDistinctSOLineNONLTAMatched.Declare
	v.Local.sAddedNONLTANum.Declare
	v.Local.bEx.Declare
	v.Local.sCusts.Declare
	
	f.Intrinsic.Control.If(v.Global.bCompare)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bCompare.Set(True)
	
	'Check if the Upload grid is populated
	f.Intrinsic.Control.If(v.DataTable.UploadTB.Exists,=,False)
		f.Intrinsic.UI.Msgbox("Upload grid (4th) is not populated","Attention")
		v.Global.bCompare.Set(False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.UI.InvokeWaitDialog("Comparing...")
	f.Intrinsic.Control.If(v.Global.bLoadCompare)
		f.Intrinsic.Control.CallSub(Serialize_Compare)
		f.Intrinsic.Control.CallSub(Serialize_LTA)
		f.Intrinsic.Control.CallSub(Serialize_NONLTA)
		f.Intrinsic.Control.CallSub(Serialize_PART)
	f.Intrinsic.Control.EndIf

	f.Intrinsic.String.Build("Delete from GCG_6218_Upl where UserID = '{0}' and Trmnl = '{1}'",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)
	f.Data.DataTable.AddExpressionColumn("UploadTB","Order_No","String","IIF(Trim(IsNull([Type],'')) = 'NON-LTA',Trim(OrderID),Trim(OrderID) + '/' + trim(ItemID))")
	f.Data.DataTable.AddColumn("UploadTB","UserID","String",v.Caller.User)
	f.Data.DataTable.AddColumn("UploadTB","Trmnl","String",v.Caller.Terminal)
	f.Data.DataTable.SaveToDB("UploadTB","conx","GCG_6218_Upl","",128,"FileHeader@!@FileHeader*!*Num@!@Num*!*Type@!@Type*!*Priority@!@Priority*!*Part@!@Part*!*OpenQty@!@OpenQty*!*OrderID@!@OrderID*!*ItemID@!@ItemID*!*Locn@!@Locn*!*ReqDate@!@ReqDate*!*NumFromForecast@!@NumFromForecast*!*Add@!@A_1*!*KeyFigure@!@KeyFigure*!*GridNum@!@UploadGridNum*!*Order_No@!@Order_No*!*UserID@!@UserID*!*Trmnl@!@Trmnl")
	
	f.Intrinsic.Control.If(v.DataView.UploadTB!vUpLoadTB.Exists)
		f.Data.DataView.Close("UploadTB","vUpLoadTB")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.Create("UploadTB","vUpLoadTB",22,"Type = 'LTA'","")
	f.Intrinsic.Control.If(v.DataTable.distinctLTACustomerPOInFile.Exists)
		f.Data.DataTable.Close("distinctLTACustomerPOInFile")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTableDistinct("UploadTB","vUpLoadTB","distinctLTACustomerPOInFile","Order_No",True)
	f.Data.DataView.Create("distinctLTACustomerPOInFile","dvdistinctLTACustomerPOInFile")	
	f.Data.DataView.ToString("distinctLTACustomerPOInFile","dvdistinctLTACustomerPOInFile","Order_No","","#$#",v.Local.sDistinctLTACustomerPOInFile)
	f.Intrinsic.String.Replace(v.Local.sDistinctLTACustomerPOInFile,"'","''",v.Local.sDistinctLTACustomerPOInFile)
	f.Intrinsic.String.Replace(v.Local.sDistinctLTACustomerPOInFile,"#$#","','",v.Local.sDistinctLTACustomerPOInFile)	
	
	f.Intrinsic.Control.If(v.DataTable.distinctNONLTACustomerPOInFile.Exists)
		f.Data.DataTable.Close("distinctNONLTACustomerPOInFile")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.SetFilter("UploadTB","vUpLoadTB","Type = 'NON-LTA'")
	f.Data.DataView.ToDataTableDistinct("UploadTB","vUpLoadTB","distinctNONLTACustomerPOInFile","Order_No",True)
	f.Data.DataView.Create("distinctNONLTACustomerPOInFile","dvdistinctNONLTACustomerPOInFile")	
	f.Data.DataView.ToString("distinctNONLTACustomerPOInFile","dvdistinctNONLTACustomerPOInFile","Order_No","","#$#",v.Local.sdistinctNONLTACustomerPOInFile)
	f.Intrinsic.String.Replace(v.Local.sdistinctNONLTACustomerPOInFile,"'","''",v.Local.sdistinctNONLTACustomerPOInFile)
	f.Intrinsic.String.Replace(v.Local.sdistinctNONLTACustomerPOInFile,"#$#","','",v.Local.sdistinctNONLTACustomerPOInFile)		
	
	f.Data.DataTable.RemoveColumn("UploadTB","Order_No")
	f.Data.DataTable.RemoveColumn("UploadTB","UserID")
	f.Data.DataTable.RemoveColumn("UploadTB","Trmnl")
	f.Data.DataTable.AcceptChanges("UploadTB")	
	
	'Total Inbound Qty 
	f.Data.Dictionary.Exists("dictTotalInboundQty",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dictTotalInboundQty")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Build("Select Part,Sum(OpenQty) from GCG_6218_Upl where UserID = '{0}' and Trmnl = '{1}' Group by Part",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Data.Dictionary.CreateFromSQL("dictTotalInboundQty","conx",v.Local.sSQL,True)
	f.Data.Dictionary.SetDefaultReturn("dictTotalInboundQty",0)	
	
	'Total Inbound Qty past due
	f.Data.Dictionary.Exists("dictTotalInboundPastDue",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dictTotalInboundPastDue")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Build("Select Part,Sum(OpenQty) from GCG_6218_Upl where UserID = '{0}' and Trmnl = '{1}' and ReqDate < '{2}' Group by Part",v.Caller.User,v.Caller.Terminal,v.Ambient.Date.PervasiveDate,v.Local.sSQL)
	f.Data.Dictionary.CreateFromSQL("dictTotalInboundPastDue","conx",v.Local.sSQL,True)
	f.Data.Dictionary.SetDefaultReturn("dictTotalInboundPastDue",0)		
	
	'Tota Order Qty in GS
	f.Data.Dictionary.Exists("dictTotalGSSBOOrderQty",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dictTotalGSSBOOrderQty")
	f.Intrinsic.Control.EndIf
	f.Data.Dictionary.CreateFromSQL("dictTotalGSSBOOrderQty","conx","Select rtrim(Part),Sum(Qty_BO) from v_Order_Lines group by Part")
	f.Data.Dictionary.SetDefaultReturn("dictTotalGSSBOOrderQty",0)		
	
	'CustomerPart dict
	f.Data.Dictionary.Exists("dictCustomerPart",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dictCustomerPart")
	f.Intrinsic.Control.EndIf
	f.Data.Dictionary.CreateFromSQL("dictCustomerPart","conx","Select rtrim(Part),Customer_Part from V_Order_Lines")
	f.Data.Dictionary.SetDefaultReturn("dictCustomerPart","")
	
	'TempSO
	f.Intrinsic.String.Build("Delete from GCG_6218_Ord where UserID = '{0}' and Trmnl = '{1}'",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)
	
	f.Intrinsic.Control.If(v.DataTable.TempSO.Exists)
		f.Data.DataTable.Close("TempSO")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Replace(v.Screen.Compare!txtSelectedCustomers.Text.Trim,"'","''",v.Local.sCusts)
	f.Intrinsic.String.Split(v.Local.sCusts,",",v.Local.sCusts)
	f.Intrinsic.String.Join(v.Local.sCusts,"','",v.Local.sCusts)
	
	f.Intrinsic.String.Build("Select h.Order_No as SO,l.Record_no as Line,Customer_PO,Part,l.Customer_Part as CustomerPart,Date_item_Prom,l.User_1,l.User_1 as POLine,QTY_ORDERED from v_Order_Header h left join v_Order_Lines l on h.Order_No = l.Order_No where h.Customer in ('{0}')",v.Local.sCusts,v.Local.sSQL)	
	f.Data.DataTable.CreateFromSQL("TempSO","conx",v.Local.sSQL,True)
	f.Data.Datatable.AddExpressionColumn("TempSO","ComparePart","String","IIF(Trim(IsNull(CustomerPart,'')) <> '',CustomerPart,Part)")
	f.Data.DataTable.AddColumn("TempSO","UserID","String",v.Caller.User)
	f.Data.DataTable.AddColumn("TempSO","Trmnl","String",v.Caller.Terminal)	
	f.Data.DataTable.SaveToDB("TempSO","conx","GCG_6218_Ord","",128,"UserID@!@UserID*!*Trmnl@!@Trmnl*!*SO@!@SO*!*Line@!@Line*!*Customer_PO@!@Customer_PO*!*Part@!@Part*!*CustomerPart@!@CustomerPart*!*ComparePart@!@ComparePart*!*Date_item_Prom@!@Date_Item_Prom*!*POLine@!@POLine*!*QTY_ORDERED@!@QTY_ORDERED*!*User_1@!@User_1")
	
	f.Intrinsic.Control.If(v.DataTable.dtCompare.Exists)
		f.Data.DataTable.Close("dtCompare")
	f.Intrinsic.Control.EndIf
	f.Data.Datatable.Create("dtCompare",True)
	
	f.Data.Datatable.AddColumn("dtCompare","Descr","String","")
	f.Data.Datatable.AddColumn("dtCompare","Customer_PO","String","")
	
	f.Data.Datatable.AddColumn("dtCompare","GSSPart","String","")
	f.Data.Datatable.AddColumn("dtCompare","CustomerPart","String","")
	f.Data.Datatable.AddColumn("dtCompare","ComparePart","String","")
	f.Data.Datatable.AddColumn("dtCompare","Date_Item_Prom","Date")
	f.Data.Datatable.AddColumn("dtCompare","User_1","String","")	
	
	f.Data.Datatable.AddColumn("dtCompare","SO","String","")
	f.Data.Datatable.AddColumn("dtCompare","Line","String","")
	f.Data.Datatable.AddColumn("dtCompare","QTY_ORDERED","float")
	
	f.Data.Datatable.AddColumn("dtCompare","Num","Long")
	f.Data.Datatable.AddColumn("dtCompare","Type","String","")
	f.Data.Datatable.AddColumn("dtCompare","Priority","String","")
	f.Data.Datatable.AddColumn("dtCompare","Part","String","")
	f.Data.Datatable.AddColumn("dtCompare","OpenQty","Long")
	f.Data.Datatable.AddColumn("dtCompare","Order_No","String","")
	f.Data.Datatable.AddColumn("dtCompare","OrderID","String","")
	f.Data.Datatable.AddColumn("dtCompare","ItemID","String","")
	f.Data.Datatable.AddColumn("dtCompare","Locn","String","")
	f.Data.Datatable.AddColumn("dtCompare","ReqDate","Date")
	f.Data.Datatable.AddColumn("dtCompare","NumFromForecast","String","")
	f.Data.Datatable.AddColumn("dtCompare","A_1","String","")
	f.Data.Datatable.AddColumn("dtCompare","KeyFigure","String","")	
	f.Data.Datatable.AddColumn("dtCompare","UploadGridNum","Long")
	
	'In GSS and nothing in inbound file
	f.Intrinsic.String.Build("Select  'Nothing found in inbound file' as Descr,so.Part as GSSPart,so.CustomerPart,so.ComparePart,SO,Line,Customer_PO,Date_Item_Prom,User_1,Qty_Ordered  from GCG_6218_Ord so where so.UserID  = '{0}' and so.Trmnl = '{1}' and  rtrim(Customer_PO) not in (Select distinct rtrim(Order_No) from GCG_6218_Upl where UserID  = '{0}' and Trmnl = '{1}')",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.NotInInboundFile.Exists)
		f.Data.Datatable.Close("NotInInboundFile")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("NotInInboundFile","conx",v.Local.sSQL,True)	
	f.Data.Datatable.Merge("NotInInboundFile","dtCompare",False,2)	
	'Delete Not Found in inbound file
	f.Intrinsic.String.Build("Delete from GCG_6218_Ord so where so.UserID  = '{0}' and so.Trmnl = '{1}' and  rtrim(Customer_PO) not in (Select distinct rtrim(Order_No) from GCG_6218_Upl where UserID  = '{0}' and Trmnl = '{1}')",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)	
		
	'Not found Sales Order in GSS	
	f.Intrinsic.String.Build("Select  'No Order Found in GSS' as Descr,Part as GSSPart,rtrim(Part) as PartTrim,'' as CustomerPart,Order_No as Customer_PO, Num,Type,Priority,Part,OpenQty,Order_No,OrderID,ItemID,Locn,ReqDate,NumFromForecast,A_1,KeyFigure,UploadGridNum from GCG_6218_Upl  where UserID  = '{0}' and Trmnl = '{1}' and rtrim(Order_NO) not in (Select distinct rtrim(Customer_PO) from GCG_6218_Ord where UserID  = '{0}' and Trmnl = '{1}')",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.NoOrder.Exists)
		f.Data.Datatable.Close("NoOrder")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("NoOrder","conx",v.Local.sSQL,True)	
	f.Data.Datatable.FillFromDictionary("NoOrder","dictCustomerPart","PartTrim","CustomerPart")
	f.Data.Datatable.AddExpressionColumn("NoOrder","ComparePart","String","IIF(Trim(IsNull(CustomerPart,'')) <> '',CustomerPart,Part)")
	f.Data.Datatable.Merge("NoOrder","dtCompare",False,2)
	'Delete Not Found (LTA and NON-LTA)
	f.Intrinsic.String.Build("Delete from GCG_6218_Upl  where UserID  = '{0}' and Trmnl = '{1}' and rtrim(Order_NO) not in (Select distinct rtrim(Customer_PO) from GCG_6218_Ord where UserID  = '{0}' and Trmnl = '{1}')",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)
	
	'****************
	'1/LTA
	'****************
	'***LTA matched: Customer_PO, Type LTA, Part, Date_Item_Prom, User_1
	f.Intrinsic.String.Build("Select  'LTA matched' as Descr, SO,Line,Customer_PO,so.Part as GSSPart,so.CustomerPart,so.ComparePart,Date_Item_Prom,User_1,Qty_Ordered ,Num,Type,Priority,u.Part,u.OpenQty,Order_No,u.OrderID,u.ItemID,u.Locn,u.ReqDate,u.NumFromForecast,u.A_1,u.KeyFigure,u.UploadGridNum from GCG_6218_Upl u inner join GCG_6218_Ord so on rtrim(u.Order_No) = rtrim(so.Customer_PO) and rtrim(u.Part) = rtrim(so.ComparePart) and u.ReqDate = so.Date_Item_Prom and rtrim(u.ItemID) = rtrim(so.User_1) where u.UserID  = '{0}' and u.Trmnl = '{1}' and Type = 'LTA' and so.UserID  = '{0}' and so.Trmnl = '{1}'",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.MatchedLTA.Exists)
		f.Data.Datatable.Close("MatchedLTA")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("MatchedLTA","conx",v.Local.sSQL,True)	
	f.Data.Datatable.Merge("MatchedLTA","dtCompare",False,2)	
	'Delete matched LTA in custom db GCG_6218_Upl 
	f.Data.DataView.Create("MatchedLTA","vMatched_LTA")
	f.Intrinsic.Control.If(v.DataTable.MatchedLTANum.Exists)
		f.Data.Datatable.Close("MatchedLTANum")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("MatchedLTA","vMatched_LTA","MatchedLTANum","UploadGridNum",True)
	f.Data.DataView.Create("MatchedLTANum","dvMatchedLTANum")
	f.Data.DataView.ToString("MatchedLTANum","dvMatchedLTANum","UploadGridNum","","#$#",v.Local.sMatchedLTANum)
	f.Intrinsic.String.Replace(v.Local.sMatchedLTANum,"'","''",v.Local.sMatchedLTANum)
	f.Intrinsic.String.Replace(v.Local.sMatchedLTANum,"#$#","','",v.Local.sMatchedLTANum)	
	f.Intrinsic.String.Build("Delete from GCG_6218_Upl where UserID  = '{0}' and Trmnl = '{1}' and  UploadGridNum in ('{2}')",v.Caller.User,v.Caller.Terminal,v.Local.sMatchedLTANum,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)
	'DistinctSOLineLTAMatched for being used later
	f.Intrinsic.Control.If(v.DataTable.DistinctSOLineLTAMatched.Exists)
		f.Data.Datatable.Close("DistinctSOLineLTAMatched")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTableDistinct("MatchedLTA","vMatched_LTA","DistinctSOLineLTAMatched","SO*!*Line",True)
	f.Data.DataView.Create("DistinctSOLineLTAMatched","dvDistinctSOLineLTAMatched")
	f.Data.DataView.ToString("DistinctSOLineLTAMatched","dvDistinctSOLineLTAMatched","SO*!*Line","","#$#",v.Local.sDistinctSOLineLTAMatched)
	f.Intrinsic.String.Replace(v.Local.sDistinctSOLineLTAMatched,"'","''",v.Local.sDistinctSOLineLTAMatched)	
	f.Intrinsic.String.Replace(v.Local.sDistinctSOLineLTAMatched,"#$#","','",v.Local.sDistinctSOLineLTAMatched)
	
	'***Get LTA Added: matched cusomter_PO, Type LTA, but: part, PO line, Date_Item_Prom are different
	f.Intrinsic.String.Build("Select  'LTA Added' as Descr, u.Order_no as Customer_PO,u.Part as GSSPart,rtrim(u.Part) as PartTrim,'' as CustomerPart,Num,Type,Priority,u.Part ,u.OpenQty,Order_No,u.OrderID,u.ItemID,u.Locn,u.ReqDate,u.NumFromForecast,u.A_1,u.KeyFigure,u.UploadGridNum from GCG_6218_Upl u where u.UserID  = '{0}' and u.Trmnl = '{1}' and  Type = 'LTA' and rtrim(u.Order_No) in (Select distinct rtrim(Customer_PO) from GCG_6218_Ord where UserID  = '{0}' and Trmnl = '{1}')",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.LTAAdded.Exists)
		f.Data.Datatable.Close("LTAAdded")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("LTAAdded","conx",v.Local.sSQL,True)	
	f.Data.Datatable.FillFromDictionary("LTAAdded","dictCustomerPart","PartTrim","CustomerPart")
	f.Data.Datatable.AddExpressionColumn("LTAAdded","ComparePart","String","IIF(Trim(IsNull(CustomerPart,'')) <> '',CustomerPart,Part)")	
	f.Data.Datatable.Merge("LTAAdded","dtCompare",False,2)	
	'Delete added LTA
	f.Data.DataView.Create("LTAAdded","vLTAAdded")
	f.Intrinsic.Control.If(v.DataTable.AddedLTANum.Exists)
		f.Data.Datatable.Close("AddedLTANum")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("LTAAdded","vLTAAdded","AddedLTANum","UploadGridNum",True)
	f.Data.DataView.Create("AddedLTANum","dvAddedLTANum")
	f.Data.DataView.ToString("AddedLTANum","dvAddedLTANum","UploadGridNum","","#$#",v.Local.sAddedLTANum)
	f.Intrinsic.String.Replace(v.Local.sAddedLTANum,"'","''",v.Local.sAddedLTANum)
	f.Intrinsic.String.Replace(v.Local.sAddedLTANum,"#$#","','",v.Local.sAddedLTANum)	
	f.Intrinsic.String.Build("Delete from GCG_6218_Upl where  UserID  = '{0}' and Trmnl = '{1}' and UploadGridNum in ('{2}')",v.Caller.User,v.Caller.Terminal,v.Local.sAddedLTANum,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)	
	
	'***LTA deleted: matched Customer_PO but Sales Order line in GSS has different of Part, Date_Item_Prom, User_1
	f.Intrinsic.String.Build("Select  'LTA Deleted' as Descr,so.Part as GSSPart,so.CustomerPart,so.ComparePart,SO,Line,Customer_PO,Date_Item_Prom,User_1,Qty_Ordered  from GCG_6218_Ord so where so.UserID  = '{0}' and so.Trmnl = '{1}' and  rtrim(Customer_PO) in ('{2}') and ((SO + Line) not in ('{3}'))",v.Caller.User,v.Caller.Terminal,v.Local.sDistinctLTACustomerPOInFile,v.Local.sDistinctSOLineLTAMatched,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.LTADeleted.Exists)
		f.Data.Datatable.Close("LTADeleted")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("LTADeleted","conx",v.Local.sSQL,True)	
	f.Data.Datatable.Merge("LTADeleted","dtCompare",False,2)
	
	'****************
	'1/NON-LTA
	'****************	
	
	'***NON-LTA matched: Customer PO, Part, PO Line (User_1)
	f.Intrinsic.String.Build("Select  'NON-LTA matched' as Descr, SO,Line,Customer_PO,so.Part as GSSPart,so.CustomerPart,so.ComparePart,Date_Item_Prom,User_1,Qty_Ordered ,Num,Type,Priority,u.Part,u.OpenQty,Order_No,u.OrderID,u.ItemID,u.Locn,u.ReqDate,u.NumFromForecast,u.A_1,u.KeyFigure,u.UploadGridNum from GCG_6218_Upl u inner join GCG_6218_Ord so on rtrim(u.Order_No) = rtrim(so.Customer_PO) and rtrim(u.Part) = rtrim(so.ComparePart) and rtrim(u.ItemID) = rtrim(so.User_1) where u.UserID  = '{0}' and u.Trmnl = '{1}' and Type = 'NON-LTA' and so.UserID  = '{0}' and so.Trmnl = '{1}'",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.MatchedNonLTA.Exists)
		f.Data.Datatable.Close("MatchedNonLTA")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("MatchedNonLTA","conx",v.Local.sSQL,True)	
	f.Data.Datatable.Merge("MatchedNonLTA","dtCompare",False,2)	
	f.Data.DataView.Create("MatchedNonLTA","vMatchedNonLTA")
	f.Intrinsic.Control.If(v.DataTable.MatchedNonLTANum.Exists)
		f.Data.Datatable.Close("MatchedNonLTANum")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("MatchedNonLTA","vMatchedNonLTA","MatchedNonLTANum","UploadGridNum",True)
	f.Data.DataView.Create("MatchedNonLTANum","dvMatchedNonLTANum")
	f.Data.DataView.ToString("MatchedNonLTANum","dvMatchedNonLTANum","UploadGridNum","","#$#",v.Local.sMatchedNonLTANum)
	f.Intrinsic.String.Replace(v.Local.sMatchedNonLTANum,"'","''",v.Local.sMatchedNonLTANum)
	f.Intrinsic.String.Replace(v.Local.sMatchedNonLTANum,"#$#","','",v.Local.sMatchedNonLTANum)	
	f.Intrinsic.String.Build("Delete from GCG_6218_Upl where UserID  = '{0}' and Trmnl = '{1}' and UploadGridNum in ('{2}')",v.Caller.User,v.Caller.Terminal,v.Local.sMatchedNonLTANum,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)
	'DistinctSOLineNONLTAMatched
	f.Intrinsic.Control.If(v.DataTable.DistinctSOLineNONLTAMatched.Exists)
		f.Data.Datatable.Close("DistinctSOLineNONLTAMatched")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTableDistinct("MatchedNONLTA","vMatchedNonLTA","DistinctSOLineNONLTAMatched","SO*!*Line",True)
	f.Data.DataView.Create("DistinctSOLineNONLTAMatched","dvDistinctSOLineNONLTAMatched")
	f.Data.DataView.ToString("DistinctSOLineNONLTAMatched","dvDistinctSOLineNONLTAMatched","SO*!*Line","","#$#",v.Local.sDistinctSOLineNONLTAMatched)
	f.Intrinsic.String.Replace(v.Local.sDistinctSOLineNONLTAMatched,"'","''",v.Local.sDistinctSOLineNONLTAMatched)	
	f.Intrinsic.String.Replace(v.Local.sDistinctSOLineNONLTAMatched,"#$#","','",v.Local.sDistinctSOLineNONLTAMatched)	
	
	'***Get NON-LTA Added: matched cusomter_PO but part, PO line, Date_Item_Prom is different
	f.Intrinsic.String.Build("Select  'NON-LTA Added' as Descr,u.Order_no as Customer_PO,u.Part as GSSPart,rtrim(u.Part) as PartTrim,'' as CustomerPart, Num,Type,Priority,u.Part ,u.OpenQty,Order_No,u.OrderID,u.ItemID,u.Locn,u.ReqDate,u.NumFromForecast,u.A_1,u.KeyFigure,u.UploadGridNum from GCG_6218_Upl u where u.UserID  = '{0}' and u.Trmnl = '{1}' and  Type = 'NON-LTA' and rtrim(u.Order_No) in (Select distinct rtrim(Customer_PO) from GCG_6218_Ord where UserID  = '{0}' and Trmnl = '{1}')",v.Caller.User,v.Caller.Terminal,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.NONLTAAdded.Exists)
		f.Data.Datatable.Close("NONLTAAdded")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("NONLTAAdded","conx",v.Local.sSQL,True)
	f.Data.Datatable.FillFromDictionary("NONLTAAdded","dictCustomerPart","PartTrim","CustomerPart")
	f.Data.Datatable.AddExpressionColumn("NONLTAAdded","ComparePart","String","IIF(Trim(IsNull(CustomerPart,'')) <> '',CustomerPart,Part)")		
	f.Data.Datatable.Merge("NONLTAAdded","dtCompare",False,2)	
	'Delete added NON-LTA
	f.Data.DataView.Create("NONLTAAdded","vNONLTAAdded")
	f.Intrinsic.Control.If(v.DataTable.AddedNONLTANum.Exists)
		f.Data.Datatable.Close("AddedNONLTANum")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("NONLTAAdded","vNONLTAAdded","AddedNONLTANum","UploadGridNum",True)
	f.Data.DataView.Create("AddedNONLTANum","dvAddedNONLTANum")
	f.Data.DataView.ToString("AddedNONLTANum","dvAddedNONLTANum","UploadGridNum","","#$#",v.Local.sAddedNONLTANum)
	f.Intrinsic.String.Replace(v.Local.sAddedNONLTANum,"'","''",v.Local.sAddedNONLTANum)
	f.Intrinsic.String.Replace(v.Local.sAddedNONLTANum,"#$#","','",v.Local.sAddedNONLTANum)	
	f.Intrinsic.String.Build("Delete from GCG_6218_Upl where UserID  = '{0}' and Trmnl = '{1}' and UploadGridNum in ('{2}')",v.Caller.User,v.Caller.Terminal,v.Local.sAddedNONLTANum,v.Local.sSQL)
	f.ODBC.Connection!conx.Execute(v.Local.sSQL)		
	
	'***NON-LTA deleted: matched Customer_PO but Sales Order line in GSS has different of Part, Date_Item_Prom, User_1
	f.Intrinsic.String.Build("Select  'NON-LTA Deleted' as Descr,so.Part as GSSPart,so.CustomerPart,so.ComparePart,SO,Line,Customer_PO,Date_Item_Prom,User_1,Qty_Ordered  from GCG_6218_Ord so where so.UserID  = '{0}' and so.Trmnl = '{1}' and  rtrim(Customer_PO) in ('{2}') and ((SO + Line) not in ('{3}'))",v.Caller.User,v.Caller.Terminal,v.Local.sDistinctNONLTACustomerPOInFile,v.Local.sDistinctSOLineNONLTAMatched,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.NONLTADeleted.Exists)
		f.Data.Datatable.Close("NONLTADeleted")
	f.Intrinsic.Control.EndIf	
	f.Data.Datatable.CreateFromSQL("NONLTADeleted","conx",v.Local.sSQL,True)	
	f.Data.Datatable.Merge("NONLTADeleted","dtCompare",False,2)
	
	'Scan changed rows	
	f.Data.Datatable.AddExpressionColumn("dtCompare","MatchedLTAChanged","String","IIF(Descr = 'LTA Matched' and Qty_Ordered <> OpenQty,'LTA Qty Changed','')")
	f.Data.Datatable.AddExpressionColumn("dtCompare","MatchedNonLTAChanged","String","IIF(Descr = 'NON-LTA Matched' and Qty_Ordered <> OpenQty and (Date_Item_Prom <> ReqDate),'NON-LTA Qty and Required Date changed', IIF(Descr = 'NON-LTA Matched' and Qty_Ordered <> OpenQty and (Date_Item_Prom = ReqDate),'NON-LTA Qty changed',IIF(Descr = 'NON-LTA Matched' and Qty_Ordered = OpenQty and (Date_Item_Prom <> ReqDate),'NON_LTA Req Date Changed','')))")
	
	'Get Onhand
	f.Data.Dictionary.Exists("dictOnhand",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dictOnhand")
	f.Intrinsic.Control.EndIf
	f.Data.Dictionary.CreateFromSQL("dictOnhand","conx","Select rtrim(Part),Qty_Onhand from Inventory_Mstr")
	f.Data.Dictionary.SetDefaultReturn("dictOnhand",0)
	f.Data.Datatable.AddColumn("dtCompare","Onhand","float",0)
	f.Data.DataTable.AddExpressionColumn("dtCompare","PartTrim2","String","Trim(GSSPart)")
	f.Data.Datatable.FillFromDictionary("dtCompare","dictOnhand","PartTrim2","Onhand")
	'Total Qty from Inbound for each part
	f.Data.Datatable.AddColumn("dtCompare","TotalInboundOpenQty","float",0)
	f.Data.Datatable.FillFromDictionary("dtCompare","dictTotalInboundQty","Part","TotalInboundOpenQty")
	'Total Qty BO in GSS
	f.Data.Datatable.AddColumn("dtCompare","TotalGSSBOQty","float",0)
	f.Data.Datatable.FillFromDictionary("dtCompare","dictTotalGSSBOOrderQty","PartTrim2","TotalGSSBOQty")
	'Total Inbound Pastdue
	f.Data.Datatable.AddColumn("dtCompare","TotalInboundPastDue","float",0)
	f.Data.Datatable.FillFromDictionary("dtCompare","dictTotalInboundPastDue","Part","TotalInboundPastDue")	
	
	'Get cache name
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Compare_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	F.Data.DataTable.SaveToXML("dtCompare",0,True,V.Local.sCompareCache)

	'gsBoth
	gui.Compare.gsBoth.AddGridviewFromDatatable("gvCompare","dtCompare")	
	f.Intrinsic.Control.CallSub(Format_gs,"Control","gsBoth","Grid","gvCompare")
	f.Intrinsic.Control.CallSub(Deserialize_Compare)
	
	'gsLTA
	f.Data.DataView.Create("dtCompare","vLTA",22,"Type = 'LTA'","")
	f.Intrinsic.Control.If(v.DataTable.LTA.Exists)
		f.Data.Datatable.Close("LTA")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("dtCompare","vLTA","LTA",True)
	F.Data.DataView.Close("dtCompare","vLTA")
	gui.Compare.gsLTA.AddGridviewFromDatatable("gvLTA","LTA")	
	f.Intrinsic.Control.CallSub(Format_gs,"Control","gsLTA","Grid","gvLTA")
	f.Intrinsic.Control.CallSub(Deserialize_LTA)
	'Get cache name
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\LTA_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	F.Data.DataTable.SaveToXML("LTA",0,True,V.Local.sCompareCache)
	
	'gsNONLTA
	f.Data.DataView.Create("dtCompare","vNonLTA",22,"Type = 'NON-LTA'","")
	f.Intrinsic.Control.If(v.DataTable.NONLTA.Exists)
		f.Data.Datatable.Close("NONLTA")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("dtCompare","vNonLTA","NONLTA",True)
	F.Data.DataView.Close("dtCompare","vNonLTA")
	gui.Compare.gsNONLTA.AddGridviewFromDatatable("gvNONLTA","NONLTA")	
	f.Intrinsic.Control.CallSub(Format_gs,"Control","gsNONLTA","Grid","gvNONLTA")	
	f.Intrinsic.Control.CallSub(Deserialize_NONLTA)
	'Get cache name
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\NONLTA_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	F.Data.DataTable.SaveToXML("NONLTA",0,True,V.Local.sCompareCache)
	
	'gsPart
	f.Data.DataView.Create("dtCompare","vPart")
	f.Intrinsic.Control.If(v.DataTable.dtPart.Exists)
		f.Data.Datatable.Close("dtPart")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTableDistinct("dtCompare","vPart","dtPart","GSSPart*!*CustomerPart*!*ComparePart*!*Part*!*Onhand*!*TotalInboundOpenQty*!*TotalGSSBOQty*!*TotalInboundPastDue",True)
	F.Data.DataView.Close("dtCompare","vPart")
	gui.Compare.gsPart.AddGridviewFromDatatable("gvPart","dtPart")
	f.Intrinsic.Control.CallSub(Format_gsPart,"Control","gsPart","Grid","gvPart")
	f.Intrinsic.Control.CallSub(Deserialize_PART)
	'Get cache name
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Part_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	F.Data.DataTable.SaveToXML("dtPart",0,True,V.Local.sCompareCache)	

	f.Intrinsic.UI.CloseWaitDialog
	v.Global.bLoadCompare.Set(True)
	v.Global.bCompare.Set(False)	
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdCompareFiles_Click.End
Program.Sub.cmdLoadCompareFromCache_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare	
	v.Local.bEx.Declare
	v.Local.sCompareCache.Declare
	v.Local.sHold.Declare
	
	f.Intrinsic.UI.InvokeWaitDialog("Please Wait...")
	f.Intrinsic.Control.If(v.Global.bLoadCompare)
		f.Intrinsic.Control.CallSub(Serialize_Compare)
		f.Intrinsic.Control.CallSub(Serialize_LTA)
		f.Intrinsic.Control.CallSub(Serialize_NONLTA)
		f.Intrinsic.Control.CallSub(Serialize_PART)		
	f.Intrinsic.Control.EndIf		
	
	'gsCompare
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Compare_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	f.Intrinsic.File.Exists(v.Local.sCompareCache,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Local.sCompareCache,v.Local.sHold)
		f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataTable.dtCompare.Exists)
		f.Data.DataTable.Close("dtCompare")
		gui.Compare.gsBoth.ClearRows("gvCompare")
	f.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromXML("dtCompare",v.Local.sCompareCache,True)	
	gui.Compare.gsBoth.AddGridviewFromDatatable("gvCompare","dtCompare")
	f.Intrinsic.Control.CallSub(Format_gs,"Control","gsBoth","Grid","gvCompare")
	f.Intrinsic.Control.CallSub(Deserialize_Compare)
	
	'gsLTA
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\LTA_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	f.Intrinsic.File.Exists(v.Local.sCompareCache,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Local.sCompareCache,v.Local.sHold)
		f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataTable.LTA.Exists)
		f.Data.DataTable.Close("LTA")
		gui.Compare.gsLTA.ClearRows("gvLTA")
	f.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromXML("LTA",v.Local.sCompareCache,True)	
	gui.Compare.gsLTA.AddGridviewFromDatatable("gvLTA","LTA")
	f.Intrinsic.Control.CallSub(Format_gs,"Control","gsLTA","Grid","gvLTA")
	f.Intrinsic.Control.CallSub(Deserialize_LTA)
	
	'gsNONLTA
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\NONLTA_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	f.Intrinsic.File.Exists(v.Local.sCompareCache,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Local.sCompareCache,v.Local.sHold)
		f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataTable.NONLTA.Exists)
		f.Data.DataTable.Close("NONLTA")
		gui.Compare.gsNONLTA.ClearRows("gvNONLTA")
	f.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromXML("NONLTA",v.Local.sCompareCache,True)	
	gui.Compare.gsNONLTA.AddGridviewFromDatatable("gvNONLTA","NONLTA")
	f.Intrinsic.Control.CallSub(Format_gs,"Control","gsNONLTA","Grid","gvNONLTA")
	f.Intrinsic.Control.CallSub(Deserialize_NONLTA)	
	'GSpART
	f.Intrinsic.String.Build("{0}\Custom\6218\{1}\Cache\Part_{2}.xml",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.User,v.Local.sCompareCache)
	f.Intrinsic.File.Exists(v.Local.sCompareCache,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx.Not)
		f.Intrinsic.String.Build("{0} does not exist.",v.Local.sCompareCache,v.Local.sHold)
		f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.UI.Msgbox(v.Local.sHold,"Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataTable.dtPart.Exists)
		f.Data.DataTable.Close("dtPart")
		gui.Compare.gsPart.ClearRows("gvPart")
	f.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromXML("dtPart",v.Local.sCompareCache,True)	
	gui.Compare.gsPart.AddGridviewFromDatatable("gvPart","dtPart")
	f.Intrinsic.Control.CallSub(Format_gsPart,"Control","gsPart","Grid","gvPart")
	f.Intrinsic.Control.CallSub(Deserialize_Part)	
	v.Global.bLoadCompare.Set(True)
	f.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdLoadCompareFromCache_Click.End
Program.Sub.Format_gs.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare	
	
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"AllowSort",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"AllowFilter",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"OptionsFindAlwaysVisible",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"EnableAppearanceOddRow",False)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"OptionsViewShowAutoFilterRow",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"AllowColumnResizing",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"OptionsViewColumnAutoWidth",False)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"Showgrouppanel",True)	
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"ColumnPanelRowHeight","40")
	
	'For RowCell click	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","AllowEdit",False)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","AllowEdit",False)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","AllowEdit",False)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","ReadOnly",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","ReadOnly",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","ReadOnly",True)	
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","CellForeColor","Blue")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","CellForeColor","Blue")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","CellForeColor","Blue")		
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Customer_PO","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"User_1","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Qty_Ordered","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Date_Item_Prom","CellBackColor","#F0F8FF")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OrderID","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ItemID","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Locn","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OpenQty","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ReqDate","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"NumFromForecast","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Num","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Type","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Priority","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"A_1","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"KeyFigure","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Order_No","CellBackColor","#F5F5DC")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"UploadGridNum","CellBackColor","#F5F5DC")
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","HeaderWordWrap","Wrap")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderWordWrap","Wrap")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Customer_PO","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"User_1","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Qty_Ordered","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Date_Item_Prom","HeaderWordWrap","Wrap")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OrderID","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ItemID","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Locn","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OpenQty","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ReqDate","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"NumFromForecast","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Num","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Type","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Priority","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"A_1","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"KeyFigure","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Order_No","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"UploadGridNum","HeaderWordWrap","Wrap")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedLTAChanged","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedNONLTAChanged","HeaderWordWrap","Wrap")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Descr","HeaderWordWrap","Wrap")
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","HeaderVAlignment","Top")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Customer_PO","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"User_1","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Qty_Ordered","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Date_Item_Prom","HeaderVAlignment","Top")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OrderID","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ItemID","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Locn","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OpenQty","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ReqDate","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"NumFromForecast","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Num","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Type","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Priority","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"A_1","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"KeyFigure","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Order_No","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"UploadGridNum","HeaderVAlignment","Top")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedLTAChanged","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedNONLTAChanged","HeaderVAlignment","Top")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Descr","HeaderVAlignment","Top")	
	

	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderHAlignment","far")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Qty_Ordered","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OpenQty","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"UploadGridNum","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Num","HeaderHAlignment","far")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"NumFromForecast","HeaderHAlignment","far")		
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","HeaderFontBold",True)		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderFontBold",True)	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Customer_PO","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"User_1","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Qty_Ordered","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Date_Item_Prom","HeaderFontBold",True)	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OrderID","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ItemID","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Locn","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OpenQty","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ReqDate","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"NumFromForecast","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Num","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Type","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Priority","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"A_1","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"KeyFigure","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Order_No","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"UploadGridNum","HeaderFontBold",True)	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedLTAChanged","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedNONLTAChanged","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Descr","HeaderFontBold",True)
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","Caption","GSS Part")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","Caption","Customer Part")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","Caption","Compare Part")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","Caption","Part")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","Caption","On Hand")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","Caption","Total Inbound Open Qty")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","Caption","Total GSS Back Order Qty")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","Caption","Total Inbound Past Due")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"SO","Caption","Sales Order")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Line","Caption","Line")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Customer_PO","Caption","Customer PO")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"User_1","Caption","User 1")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Qty_Ordered","Caption","Qty Ordered")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Date_Item_Prom","Caption","Promise Date")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OrderID","Caption","OrderID")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ItemID","Caption","ItemID")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Locn","Caption","Locn")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"OpenQty","Caption","OpenQty")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ReqDate","Caption","ReqDate")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"NumFromForecast","Caption","Num from Forecast file")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Num","Caption","Num from Commit file")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Type","Caption","Type")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Priority","Caption","Priority")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"A_1","Caption","A_1")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"KeyFigure","Caption","KeyFigure")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Order_No","Caption","Order_No")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"UploadGridNum","Caption","Num from Upload file")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedLTAChanged","Caption","Matched LTA Changed")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"MatchedNONLTAChanged","Caption","Matched NON-LTA Changed")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Descr","Caption","Category")	
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"PartTrim2","Visible",False)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"PartTrim2","AllowShowHide",False)

	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Date_Item_Prom","DisplayCustomDatetime","d")	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ReqDate","DisplayCustomDatetime","d")
	
	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag1","equal","No Order Found in GSS")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag1","backcolor","DarkSeaGreen")

	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag2","equal","LTA matched")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag2","backcolor","Gold")
	
	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag3","equal","LTA Deleted")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag3","backcolor","Khaki")
	
	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag4","equal","LTA Added")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag4","backcolor","#FFFACD")
	
	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag5","equal","NON-LTA Matched")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag5","backcolor","#E0FFFF")
	
	
	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag6","equal","NON-LTA Added")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag6","backcolor","LightSeaGreen")
	
	gui.Compare.[v.Args.Control].AddStyleFormatCondition(v.Args.Grid,"Descr","tag7","equal","NON-LTA Deleted")
	gui.Compare.[v.Args.Control].SetStyleFormatConditionProperty(v.Args.Grid,"Descr","tag7","backcolor","LightSteelBlue")	
	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"PART","PART","Count","Total row: ","",n0)
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"Qty_Ordered","Qty_Ordered","Sum","Total: ","",n0)
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"OpenQty","OpenQty","Sum","Total: ","",n0)
	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"Onhand","Onhand","Sum","Total: ","",n0)
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"TotalInboundOpenQty","TotalInboundOpenQty","Sum","Total: ","",n0)	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"TotalGSSBOQty","TotalGSSBOQty","Sum","Total: ","",n0)	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"TotalInboundPastDue","TotalInboundPastDue","Sum","Total: ","",n0)
	
	gui.Compare.[v.Args.Control].AddGridGroupSummaryItem(v.Args.Grid,"Part","PartGroup","Count","Tt Row: "," ","n0")
	gui.Compare.[v.Args.Control].AddGridGroupSummaryItem(v.Args.Grid,"Qty_Ordered","Qty_OrderedGroup","Sum","Tt BOQty : "," ","n0")
	gui.Compare.[v.Args.Control].AddGridGroupSummaryItem(v.Args.Grid,"OpenQty","OpenQtyGroup","Sum","Tt InboundQty : "," ","n0")
	
	gui.Compare.[v.Args.Control].MainView(v.Args.Grid)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Format_gs.End

Program.Sub.cmdOpenCompareForm_Click.Start
'f.Intrinsic.Control.CallSub(optLTA_Click)
'gui.Compare.optLTA.Value(True)
'gui.Compare.optNONLTA.Value(False)
GUI.Compare.tab1.SetTab(0)
gui.Compare..Visible(True)
gui.Compare..WindowState(2)
Program.Sub.cmdOpenCompareForm_Click.End

Program.Sub.Form_Resize.Start
'gui.Form.Ctn1.Size(v.Screen.Form!Ctn1.Height,v.Screen.Form.Width)
Program.Sub.Form_Resize.End
Program.Sub.optLTA_Click.Start
gui.Compare.gsBoth.Visible(True)
gui.Compare.gsNONLTA.Visible(False)
Program.Sub.optLTA_Click.End
Program.Sub.optNONLTA_Click.Start
gui.Compare.gsBoth.Visible(False)
gui.Compare.gsNONLTA.Visible(True)
Program.Sub.optNONLTA_Click.End
Program.Sub.cmdAddCustomer_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sCustomer.Declare
	
	v.Local.sCustomer.Set(v.Screen.Compare!txtCust.Text.Trim)
	f.Intrinsic.Control.If(v.Local.sCustomer,=,"")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Screen.Compare!txtSelectedCustomers.Text.Trim,=,"")
		gui.Compare.txtSelectedCustomers.Text(v.Local.sCustomer)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("{0},{1}",v.Screen.Compare!txtSelectedCustomers.Text.Trim,v.Local.sCustomer,v.Local.sCustomer)
		gui.Compare.txtSelectedCustomers.Text(v.Local.sCustomer)
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdAddCustomer_Click.End

Program.Sub.Format_gsPart.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"AllowSort",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"AllowFilter",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"OptionsFindAlwaysVisible",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"EnableAppearanceOddRow",False)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"OptionsViewShowAutoFilterRow",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"AllowColumnResizing",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"OptionsViewColumnAutoWidth",False)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"Showgrouppanel",True)
	gui.Compare.[v.Args.Control].SetGridViewProperty(v.Args.Grid,"ColumnPanelRowHeight","35")
	
	'For RowCell click
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","AllowEdit",False)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","ReadOnly",True)
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","CellForeColor","Blue")	
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","CellBackColor","#F0F8FF")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","CellBackColor","#F5F5DC")
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","HeaderWordWrap","Wrap")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderWordWrap","Wrap")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderWordWrap","Wrap")
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","HeaderVAlignment","Top")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderVAlignment","Top")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderVAlignment","Top")	
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderHAlignment","far")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderHAlignment","far")	
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","HeaderFontBold",True)		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","HeaderFontBold",True)
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","HeaderFontBold",True)	
	
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"GSSPart","Caption","GSS Part")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"CustomerPart","Caption","Customer Part")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"ComparePart","Caption","Compare Part")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Part","Caption","Part")		
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"Onhand","Caption","On Hand")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundOpenQty","Caption","Total Inbound Open Qty")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalGSSBOQty","Caption","Total GSS Back Order Qty")
	gui.Compare.[v.Args.Control].SetColumnProperty(v.Args.Grid,"TotalInboundPastDue","Caption","Total Inbound Past Due")	
	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"PART","PART","Count","Total row: ","",n0)
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"Onhand","Onhand","Sum","Total: ","",n0)
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"TotalInboundOpenQty","TotalInboundOpenQty","Sum","Total: ","",n0)	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"TotalGSSBOQty","TotalGSSBOQty","Sum","Total: ","",n0)	
	gui.Compare.[v.Args.Control].AddSummaryItem(v.Args.Grid,"TotalInboundPastDue","TotalInboundPastDue","Sum","Total: ","",n0)		
	gui.Compare.[v.Args.Control].MainView(v.Args.Grid)
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
       F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.Format_gsPart.End
Program.Sub.cmdExportCompare_Click.Start
	v.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)

	F.Intrinsic.Control.If(V.Local.bExcel)
		'Both
		F.Intrinsic.String.Build("{0}\CompareAll_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			gui.Compare.gsBoth.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
		'LTA
		F.Intrinsic.String.Build("{0}\CompareLTA_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsLTA.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf		
		'NONLTA
		F.Intrinsic.String.Build("{0}\CompareNonLTA_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsNONLTA.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
'		'Part
		F.Intrinsic.String.Build("{0}\Part_{1}.xlsx",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsPart.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf	
		
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\CompareAll_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsBoth.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		
		F.Intrinsic.String.Build("{0}\CompareLTA_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsLTA.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		
		F.Intrinsic.String.Build("{0}\CompareNonLTA_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsNONLTA.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		
		F.Intrinsic.String.Build("{0}\Part_{1}.csv",V.Caller.LocalGssTempDir,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Compare.gsPart.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)		
	F.Intrinsic.Control.EndIf
	
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdExportCompare_Click.End

Program.Sub.gsBoth_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bAuth.Declare
	v.Local.sPart.Declare
	v.Local.sParams.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column.UCase)
	
		f.Intrinsic.Control.Case("GSSPART")
			'Goto Supply and Demand
			'Check if user has permission to access to menu item
			Function.Global.Security.CheckUserAccessIPM(321,0,v.Local.bAuth)
			f.Intrinsic.Control.If(v.Local.bAuth.Not)
				f.Intrinsic.UI.Msgbox("User does not have permission to Supply and Demand screen.","Menu Item Not Assigned")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.RPad(v.DataTable.dtCompare(v.Args.RowIndex).GSSPart!FieldValString," ",20,v.Local.sPart)
			f.Data.DataTable.AddRow("300010","Part",v.Local.sPart,"Loc","")
			f.Intrinsic.Control.CallSub(300010Sync)				
		F.Intrinsic.Control.CaseAny("SO","LINE")
			'Open sales order view
			F.Intrinsic.String.ConcatCallWrapperArgs(v.DataTable.dtCompare(v.Args.RowIndex).SO!FieldValTrim,"V","*!*ZDR*!*",V.Local.sParams)
			F.Global.General.CallWrapperAsync(200000,V.Local.sParams)	
	f.Intrinsic.Control.EndSelect


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.gsBoth_RowCellClick.End

Program.Sub.gsLTA_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bAuth.Declare
	v.Local.sPart.Declare
	v.Local.sParams.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column.UCase)
	
		f.Intrinsic.Control.Case("GSSPART")
			'Goto Supply and Demand
			'Check if user has permission to access to menu item
			Function.Global.Security.CheckUserAccessIPM(321,0,v.Local.bAuth)
			f.Intrinsic.Control.If(v.Local.bAuth.Not)
				f.Intrinsic.UI.Msgbox("User does not have permission to Supply and Demand screen.","Menu Item Not Assigned")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.RPad(v.DataTable.LTA(v.Args.RowIndex).GSSPart!FieldValString," ",20,v.Local.sPart)
			f.Data.DataTable.AddRow("300010","Part",v.Local.sPart,"Loc","")
			f.Intrinsic.Control.CallSub(300010Sync)				
		F.Intrinsic.Control.CaseAny("SO","LINE")
			'Open sales order view
			F.Intrinsic.String.ConcatCallWrapperArgs(v.DataTable.LTA(v.Args.RowIndex).SO!FieldValTrim,"V","*!*ZDR*!*",V.Local.sParams)
			F.Global.General.CallWrapperAsync(200000,V.Local.sParams)	
	f.Intrinsic.Control.EndSelect


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.gsLTA_RowCellClick.End

Program.Sub.gsNONLTA_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bAuth.Declare
	v.Local.sPart.Declare
	v.Local.sParams.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column.UCase)
	
		f.Intrinsic.Control.Case("GSSPART")
			'Goto Supply and Demand
			'Check if user has permission to access to menu item
			Function.Global.Security.CheckUserAccessIPM(321,0,v.Local.bAuth)
			f.Intrinsic.Control.If(v.Local.bAuth.Not)
				f.Intrinsic.UI.Msgbox("User does not have permission to Supply and Demand screen.","Menu Item Not Assigned")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.RPad(v.DataTable.NONLTA(v.Args.RowIndex).GSSPart!FieldValString," ",20,v.Local.sPart)
			f.Data.DataTable.AddRow("300010","Part",v.Local.sPart,"Loc","")
			f.Intrinsic.Control.CallSub(300010Sync)				
		F.Intrinsic.Control.CaseAny("SO","LINE")
			'Open sales order view
			F.Intrinsic.String.ConcatCallWrapperArgs(v.DataTable.NONLTA(v.Args.RowIndex).SO!FieldValTrim,"V","*!*ZDR*!*",V.Local.sParams)
			F.Global.General.CallWrapperAsync(200000,V.Local.sParams)	
	f.Intrinsic.Control.EndSelect


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.gsNONLTA_RowCellClick.End

Program.Sub.gsPart_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bAuth.Declare
	v.Local.sPart.Declare
	v.Local.sParams.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column.UCase)
	
		f.Intrinsic.Control.Case("GSSPART")
			'Goto Supply and Demand
			'Check if user has permission to access to menu item
			Function.Global.Security.CheckUserAccessIPM(321,0,v.Local.bAuth)
			f.Intrinsic.Control.If(v.Local.bAuth.Not)
				f.Intrinsic.UI.Msgbox("User does not have permission to Supply and Demand screen.","Menu Item Not Assigned")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.RPad(v.DataTable.dtPart(v.Args.RowIndex).GSSPart!FieldValString," ",20,v.Local.sPart)
			f.Data.DataTable.AddRow("300010","Part",v.Local.sPart,"Loc","")
			f.Intrinsic.Control.CallSub(300010Sync)				
	f.Intrinsic.Control.EndSelect


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_6218_EDI_Compare.g2u{0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.gsPart_RowCellClick.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$bnguyen$}$20210128134231850$}$tqzwddZCkmoVRWHEL6DZymEEseDhOdziUD6RDuqhG2BnxfgVHGm6fBjBOFpmAFPqmr3Q7k9BhRU=
Program.Sub.Comments.End